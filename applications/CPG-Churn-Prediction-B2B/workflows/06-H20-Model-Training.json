{
  "name": "06-H20-Model-Training",
  "uuid": "60ea0138-dbdf-4821-a668-f08c4ccea37b",
  "category": "Model Training",
  "description": "-",
  "parameters": " --var arg_distributor_eda='DT3501','DT5678','DT7890','DT4500','DT9012' --var arg_sector_eda='BCC','FEM','FAMILY' --var arg_category_eda='DIAPERS','WIPES','FACIAL TISSUES','LINERS' --var arg_subcategory_eda='Huggies','Wipes','Kotex' --var run=false --var a=Monthly_Avg_Sales,Quarterly_Avg_Sales,6M_Avg_Sales --var b=Monthly_Invoice_Count,Quarterly_Invoice_Count,6M_Invoice_Count --var workflow_105_columns=CUSTOMER_ID,Avg_Sales_Per_Invoice --var workflow_106_columns=CUSTOMER_ID,Customer_Age_In_Days --var explorePatientData=false --var selectMLEngine=h2oMLEngine --var arg_distributor_mt='DT3501','DT5678','DT7890','DT4500','DT9012' --var arg_sector_mt='BCC','FEM','FAMILY' --var arg_subcategory_mt='Huggies','Wipes','Kotex' --var arg_category_mt='DIAPERS','WIPES','FACIAL TISSUES','LINERS' --var workflow_11_inputcolumns=Monthly_Invoice_Count,Quarterly_Invoice_Count,6M_Invoice_Count,Avg_Sales_Per_Invoice,Monthly_Avg_Sales,Quarterly_Avg_Sales,6M_Avg_Sales,Customer_Age_In_Days --var smlseed=1234 --var smlmaxbins=32 --var splmaxdepth=5 --var h2omaxrows=10 --var h2oseed=-1 --var h2onumoffolds=0 --var h2onumoftrees=50 --var h2omaxdepth=5 --var selectH2OModel=h2ODistributedRandomForest --var workflow_32_FEATURECOLUMNS=Monthly_Invoice_Count,Quarterly_Invoice_Count,6M_Invoice_Count,Avg_Sales_Per_Invoice,Monthly_Avg_Sales,Quarterly_Avg_Sales,6M_Avg_Sales,Customer_Age_In_Days --var run1=true",
  "nodes": [
    {
      "id": "1",
      "name": "Sticky Note",
      "description": "Allows capturing Notes on the Workflow",
      "details": "",
      "examples": "",
      "type": "sticky",
      "nodeClass": "fire.nodes.doc.NodeStickyNote",
      "x": "18px",
      "y": "19px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "bgColor",
          "value": "blue",
          "widget": "textfield",
          "title": "Bg Color",
          "description": "Background of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "width",
          "value": "253.4px",
          "widget": "textfield",
          "title": "Width",
          "description": "Width of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "height",
          "value": "69.4px",
          "widget": "textfield",
          "title": "Height",
          "description": "Height of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "comment",
          "value": "<p>This workflow trains ML Model</p>",
          "widget": "textarea_rich",
          "title": "Comment",
          "description": "Comments for the Workflow",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "2",
      "name": "Read CSV",
      "description": "It reads in CSV files and creates a DataFrame from it.",
      "details": "<h2>Read CSV Details</h2>\n<br>\nThis node reads CSV files and creates a DataFrame from them. It can read either a single file or a directory containing multiple files. The user can configure the below fields to parse the file.<br>\n<br>\nThe user can choose the <b>Output storage level</b> from the drop down. The options in the dropdown can be one of the following:<br>\n<ul>\n<li> <b>MEMORY_ONLY</b>          Store RDD as deserialized Java objects in the JVM. If the RDD does not fit in memory, some partitions will not be cached and will be recomputed on the fly each time they are needed. This is the default level.</li>\n<li> <b>MEMORY_AND_DISK</b>       Store RDD as deserialized Java objects in the JVM. If the RDD does not fit in memory, store the partitions that do not fit on disk, and read them from there when they are needed.</li>\n<li> <b>MEMORY_ONLY_SER</b>        Store RDD as serialized Java objects (one byte array per partition). This is generally more space-efficient than deserialized objects, especially when using a fast serializer, but more CPU-intensive to read.</li>\n<li> <b>MEMORY_AND_DISK_SER</b>    Similar to MEMORY_ONLY_SER, but spill partitions that do not fit in memory to disk instead of recomputing them on the fly each time they're needed.</li>\n<li> <b>DISK_ONLY</b>              Store the RDD partitions only on disk.</li>\n<li> <b>MEMORY_ONLY_2, MEMORY_AND_DISK_2 others </b> . Same as the levels above, but replicate each partition on two cluster nodes.</li>\n<li> <b>OFF_HEAP</b>               Similar to MEMORY_ONLY_SER, but store the data in off-heap memory. This requires off-heap memory to be enabled.</li>\n</ul>\nThe user needs to provide a data file <b>Path</b> to read the data from. This is a required field.<br>\n<br>\nThe user can choose the <b>Separator</b> used in the data file to parse it. The default separator is <b>( , )</b> comma.<br>\n<br>\nIn the <b>Header</b> field, one can choose:<br>\n<ul>\n<li> <b>true</b> if the data file has a header.</li>\n<li> <b>false</b> Otherwise.</li>\n</ul>\nIn the <b>Drop special character in column name</b> field, one can choose:<br>\n<ul>\n<li> <b>true</b> If you want to remove the special characters from column names.</li>\n<li> <b>false</b> Otherwise.</li>\n</ul>\nIn the <b>Mode</b> field, one can choose from the below options in the dropdown:<br>\n<ul>\n<li> <b>PERMISSIVE</b> When the parser meets a corrupt field in a record, it sets the value of the field to NULL and continues to the next record.</li>\n<li> <b>DROPMALFORMED</b> ignores the whole corrupted record.</li>\n<li> <b>FAILFAST</b> throws an exception when it meets corrupted records.</li>\n</ul>\nIn the <b>Enforce Schema</b> field, one can choose:<br>\n<ul>\n<li> <b>true</b> The specified or inferred schema will be forcibly applied to datasource files, and headers in CSV files will be ignored.</li>\n<li> <b>false</b> The schema will be validated against all headers in CSV files when the header option is set to <b>false</b>.</li>\n</ul>\nIn the <b>Whether to add input file as a column in DataFrame</b> field, one can choose:<br>\n<ul>\n<li> <b>true</b> There will be a new column added to the DataFrame at the end, which can be seen in the schema columns. One can enter the name of this column.</li>\n<li> <b>false</b> This functionality is disabled, and the DataFrame consists of only the columns read from the data file.</li>\n</ul>\nIn the <b>ENCODING</b> field, one can specify the encoding type to be used for reading the files. By default, it is set as <b>UTF-8</b>.<br>\n<br>\nThe <b>QUOTE</b> field sets a single character used for escaping quoted values where the separator can be part of the value. The default value for this is <b>( \" )</b>, a double quote.<br>\n<br>\nThe <b>ESCAPE</b> field sets a single character used for escaping quotes inside an already quoted value. The default value for this is <b>( \\ )</b>, a backslash.\t<br>\n<br>\nAfter the above options are set, one can click on <b>InferSchema</b> to see the final columns.<br>\nUsers can still add or delete columns using <b>+</b> button next to the InferSchema and <b>-</b> button next to the column names.<br>",
      "examples": "<h2> Read CSV Node Example</h2>\n<br>\nGiven a CSV file with the following data:<br>\n<br>\nSupplierID,SupplierName,Region,YearsInBusiness,LeadTime,PriceIndex,OrderFulfillmentTime,OverallCost,OrderCancellations,CustomerRating<br>\nS1,Supplier A,Region 1,10,5,1.2,3,100,2,4<br>\nS2,Supplier B,Region 2,15,7,1.1,4,120,1,5<br>\nIf you configure the Read CSV node as follows:<br>\n<br>\nPath: /path/to/your/file.csv<br>\nSeparator: ,<br>\nHeader: true<br>\nThe output would be a DataFrame with the following schema:<br>\n<br>\nColumn Name\tData Type<br>\nSupplierID\tString<br>\nSupplierName\tString<br>\nRegion\tString<br>\nYearsInBusiness\tInteger<br>\nLeadTime\tInteger<br>\nPriceIndex\tDouble<br>\nOrderFulfillmentTime\tInteger<br>\nOverallCost\tInteger<br>\nOrderCancellations\tInteger<br>\nCustomerRating\tInteger<br>",
      "type": "dataset",
      "nodeClass": "fire.nodes.dataset.NodeDatasetCSV",
      "x": "28.7833px",
      "y": "310.8px",
      "hint": "Infer the schema when a new file is selected or the file content has changed",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "path",
          "value": "data/CPG/CPG-Churn-Prediction-B2B/Processed-Data/Features-Data/",
          "widget": "textfield",
          "title": "Path",
          "description": "Path of the file/directory",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "separator",
          "value": ",",
          "widget": "textfield",
          "title": "Separator",
          "description": "CSV Separator",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "header",
          "value": "true",
          "widget": "array",
          "title": "Header",
          "description": "Whether the file has a header row",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "dropSpecialCharacterInColumnName",
          "value": "false",
          "widget": "array",
          "title": "Drop Special Character In ColumnName",
          "description": "Whether to drop the Special Characters and Spaces in Column Name.",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "mode",
          "value": "PERMISSIVE",
          "widget": "array",
          "title": "Mode",
          "description": "Mode for dealing with corrupt records during parsing.",
          "optionsArray": [
            "PERMISSIVE",
            "DROPMALFORMED",
            "FAILFAST"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "enforceSchema",
          "value": "false",
          "widget": "array",
          "title": "Enforce Schema",
          "description": "If it is set to true, the specified or inferred schema will be forcibly applied to datasource files, and headers in CSV files will be ignored. If the option is set to false, the schema will be validated against all headers in CSV files in the case when the header option is set to true.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "addInputFileName",
          "value": "false",
          "widget": "array",
          "title": "Whether to Add Input File Name as Column in the Dataframe",
          "description": "Add the new field:input_file_name",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "encoding",
          "value": "UTF-8",
          "widget": "textfield",
          "title": "Encoding",
          "description": "Decodes the CSV files by the given encoding type",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "quote",
          "value": "\"",
          "widget": "textfield",
          "title": "Quote",
          "description": "Sets a single character used for escaping quoted values where the separator can be part of the value",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "escape",
          "value": "\\",
          "widget": "textfield",
          "title": "Escape",
          "description": "Sets a single character used for escaping quotes inside an already quoted value.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "schema",
          "value": "",
          "widget": "tab",
          "title": "InferSchema",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "outputColNames",
          "value": "[]",
          "widget": "schema_col_names",
          "title": "Column Names for the CSV",
          "description": "New Columns from CSV",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "outputColTypes",
          "value": "[]",
          "widget": "schema_col_types",
          "title": "Column Types for the CSV",
          "description": "Data Type of the Output Columns",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "outputColFormats",
          "value": "[]",
          "widget": "schema_col_formats",
          "title": "Column Formats for the CSV",
          "description": "Format of the Output Columns",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "properties",
          "value": "",
          "widget": "tab",
          "title": "Properties",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "extraOptionsKeys",
          "value": "[]",
          "widget": "key_array",
          "title": "Properties Name",
          "description": "Extra options/properites available while executing in Read CSV.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "Extra Options",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "extraOptionsValues",
          "value": "[]",
          "widget": "value_array",
          "title": "Properties Value",
          "description": "Config Values for the Corresponding properites name",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "3",
      "name": "Row Filter",
      "description": "This node creates a new DataFrame containing the rows that satisfy the given condition",
      "details": "<h2>Details</h2>\n<br>\nRow filter allows the user to filter out rows that do not meet a set condition. Rows that meet the condition are passed on to the next node in a new dataframe.<br>",
      "examples": "<h2>Examples of Conditional Expression</h2>\n<br>\nBelow are some examples of the Conditions Expression which can be used.<br>\n<br>\n<ul>\n<li> col1 > 5 AND col2 > 3</li>\n</ul>\n<ul>\n<li> name is not NULL</li>\n</ul>\n<ul>\n<li> name is NULL</li>\n</ul>\n<ul>\n<li> usd_pledged_real > 0 and (category = \"Narrative Film\" or category == \"Music\") and goal > 100</li>\n</ul>\n<ul>\n<li> dt > '2021-09-03'  (dt column is of type date)</li>\n</ul>\n<ul>\n<li> datetime > '2011-01-01 00:00:00.0'     (datetime column is of type timestamp)</li>\n</ul>\n<ul>\n<li> datetime > '2011-01-01 00:00:00.0' and datetime < '2016-01-01 00:00:00.0'</li>\n</ul>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeRowFilter",
      "x": "181.683px",
      "y": "173.667px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "conditionExpr",
          "value": "Total_Invoice_Count > 0 and\ndistributor_id in (${arg_distributor_mt}) and\nsector in (${arg_sector_mt}) and\ncategory in (${arg_category_mt}) -- and\n-- subcategory in (${subcategory})\n--1=1",
          "widget": "code_editor",
          "type": "sparksql",
          "title": "Conditional Expression",
          "description": "The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real > 0 and (category = 1 or category == 2) and goal > 100",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "8",
      "name": "Drop Rows With Null",
      "description": "This node creates a new DataFrame by dropping rows containing null values",
      "details": "This node creates a new DataFrame by dropping rows containing NULL values in any of the columns.<br>",
      "examples": "Incoming Dataframe has following rows:<br>\n<br>\nEMP_CD    |    EMP_NAME    |    DEPT       |    AGE<br>\n-------------------------------------------------------<br>\nE01       |    DAVID       |    HR         |    25<br>\nE05       |    MARK        |               |    25<br>\nE02       |    JOHN        |    SALES      |    35<br>\nE03       |    TONY        |    MARKETING  |    <br>\nE04       |    MARTIN      |    MARKETING  |    45<br>\n<br>\nIncoming Dataframe has NULL values for two rows. <br>\nUsing DropRowsWithNull node would result in below outgoing Dataframe created by dropping rows having NULL values in any of the columns:<br>\n<br>\nEMP_CD    |    EMP_NAME    |    DEPT       |    AGE<br>\n-------------------------------------------------------<br>\nE01       |    DAVID       |    HR         |    25<br>\nE02       |    JOHN        |    SALES      |    35<br>\nE04       |    MARTIN      |    MARKETING  |    45<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeDropRowsWithNull",
      "x": "26.1833px",
      "y": "174.183px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "32",
      "name": "H2O Distributed Random Forest",
      "description": "Distributed Random Forest (DRF) is a powerful classification and regression tool. DRF generates a forest of classification or regression trees.",
      "details": "Distributed Random Forest (DRF) is a powerful classification and regression tool. When given a set of data, DRF generates a forest of classification or regression trees, rather than a single classification or regression tree. Each of these trees is a weak learner built on a subset of rows and columns. More trees will reduce the variance. Both classification and regression take the average prediction over all of their trees to make a final prediction, whether predicting for a class or numeric value.<br>\n<br>\nMore details are available at : <a href=\"http://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/drf.html\" target=\"_blank\">docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/drf.html</a><br>",
      "examples": "Input:<br>\nLabel Column: \"HousePrice\"<br>\nFeature Columns: [\"Bedrooms\", \"SquareFootage\", \"Neighborhood\"]<br>\nOutput:<br>\nA Random Forest model trained to predict house prices.<br>\nThe output includes feature importance scores, helping identify the most influential predictors.<br>",
      "type": "ml-estimator",
      "nodeClass": "fire.nodes.h2o.NodeH2ODrf",
      "x": "1072.03px",
      "y": "141.433px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "isResponseIsCategorical",
          "value": "true",
          "widget": "array",
          "title": "Is Response Column Categorical",
          "description": "Specify a response column type(numeric or categorical). Separates the Classification and Regression",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "labelCol",
          "value": "Actuals",
          "widget": "variable",
          "title": "Label Column",
          "description": "Response variable column.",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "featuresCols",
          "value": "[]",
          "widget": "variables",
          "title": "Feature Columns",
          "description": "Features to be used for Modelling",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "path",
          "value": "",
          "widget": "textfield",
          "title": "Path",
          "description": "Save Confusion Matrix to Path",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "columnsToCategorical",
          "value": "[]",
          "widget": "variables",
          "title": "Columns to Categorical",
          "description": "Columns to be Categorical encoded",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "seed",
          "value": "-1",
          "widget": "textfield",
          "title": "Seed",
          "description": "Seed for pseudo random number generator (if applicable).",
          "datatypes": [
            "Long"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "balanceClasses",
          "value": "false",
          "widget": "textfield",
          "title": "Balance Classes",
          "description": "Balance training data class counts via over/under-sampling (for imbalanced data).",
          "datatypes": [
            "boolean"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "splitRatio",
          "value": "1.0",
          "widget": "textfield",
          "title": "Split Ratio",
          "description": "Split Ratio",
          "datatypes": [
            "float"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "nfolds",
          "value": "0",
          "widget": "textfield",
          "title": "Number of Folds",
          "description": "Number of folds for K-fold cross-validation (0 to disable or >= 2).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ntrees",
          "value": "50",
          "widget": "textfield",
          "title": "Number of Trees",
          "description": "Number of trees.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "maxDepth",
          "value": "5",
          "widget": "textfield",
          "title": "Max Depth",
          "description": "Maximum tree depth (0 for unlimited).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "minRows",
          "value": "10.0",
          "widget": "textfield",
          "title": "Min Rows",
          "description": "Fewest allowed (weighted) observations in a leaf.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "nbins",
          "value": "20",
          "widget": "textfield",
          "title": "Number of Bins",
          "description": "For numerical columns (real/int), build a histogram of (at least) this many bins, then split at the best point.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "nbinsTopLevel",
          "value": "1024",
          "widget": "textfield",
          "title": "Number of bins top level",
          "description": "For numerical columns (real/int), build a histogram of (at most) this many bins at the root level, then decrease by factor of two per level.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "nbinsCats",
          "value": "1024",
          "widget": "textfield",
          "title": "Number of Bins Categoricals",
          "description": "For categorical columns (factors), build a histogram of this many bins, then split at the best point. Higher values can lead to more overfitting.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "categoricalEncoding",
          "value": "AUTO",
          "widget": "array",
          "title": "Categorical Encoding",
          "description": "Specify one of the various encoding schemes for handling categorical features",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "OneHotInternal",
            "OneHotExplicit",
            "Enum",
            " Binary",
            "Eigen",
            "LabelEncode",
            "SortByResponse",
            "EnumLimited"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ignoreConstCols",
          "value": "true",
          "widget": "array",
          "title": "Ignore Const Columns",
          "description": "Ignore constant columns.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "scoreEachIteration",
          "value": "false",
          "widget": "array",
          "title": "Score Each Iteration",
          "description": "Whether to score during each iteration of model training.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "stoppingRounds",
          "value": "0",
          "widget": "textfield",
          "title": "Stopping Rounds",
          "description": "Early stopping based on convergence of stopping_metric. Stop if simple moving average of length k of the stopping_metric does not improve for k:=stopping_rounds scoring events (0 to disable).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "maxRuntimeSecs",
          "value": "0.0",
          "widget": "textfield",
          "title": "Max Runtime Secs",
          "description": "his argument specifies the maximum time that the AutoML process will run for. If both max_runtime_secs and max_models are specified, then the AutoML run will stop as soon as it hits either of these limits. If neither max_runtime_secs nor max_models are specified, then max_runtime_secs defaults to 3600 seconds (1 hour).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "stoppingMetric",
          "value": "AUTO",
          "widget": "array",
          "title": "StoppingMetric",
          "description": "Metric to use for early stopping (AUTO: logloss for classification, deviance for regression)",
          "optionsArray": [
            "AUTO",
            "deviance",
            "logloss",
            "MSE",
            "RMSE",
            "MAE",
            "RMSLE",
            "AUC",
            "AUCPR",
            "lift_top_group",
            "misclassification",
            "mean_per_class_error",
            "anomaly_score",
            "custom",
            "custom_increasing"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "stoppingTolerance",
          "value": "0.001",
          "widget": "textfield",
          "title": "StoppingTolerance",
          "description": "Relative tolerance for metric-based stopping criterion (stop if relative improvement is not at least this much)",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gainsliftBins",
          "value": "-1",
          "widget": "textfield",
          "title": "Gains Lift Bins",
          "description": "Gains/Lift table number of bins. 0 means disabled.. Default value -1 means automatic binning.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "withContributions",
          "value": "true",
          "widget": "array",
          "title": "With Contributions",
          "description": "Enables or disables generating a sub-column of detailedPredictionCol containing Shapley values.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "advanced",
          "value": "",
          "widget": "tab",
          "title": "Advanced",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "convertUnknownCategoricalLevelsToNa",
          "value": "true",
          "widget": "array",
          "title": "Convert Unknown Categorical Levels to NA",
          "description": "If set to ‘true’, the model converts unknown categorical levels to NA during making predictions.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "withLeafNodeAssignments",
          "value": "false",
          "widget": "array",
          "title": "With Node Assignments",
          "description": "Enables or disables computation of leaf node assignments.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "withStageResults",
          "value": "false",
          "widget": "array",
          "title": "With Stage Results",
          "description": "Enables or disables computation of stage results.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "mtries",
          "value": "-1",
          "widget": "textfield",
          "title": "mtries",
          "description": "Number of variables randomly sampled as candidates at each split. If set to -1, defaults to sqrt{p} for classification and p/3 for regression (where p is the # of predictors.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "binomialDoubleTrees",
          "value": "false",
          "widget": "array",
          "title": "Binomial Double trees",
          "description": "For binary classification: Build 2x as many trees (one per class) - can lead to higher accuracy.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "sampleRate",
          "value": "0.632",
          "widget": "textfield",
          "title": "Sample Rate",
          "description": "Row sample rate per tree (from 0.0 to 1.0).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "maxAfterBalanceSize",
          "value": "5.0",
          "widget": "textfield",
          "title": "Max After Balance Size",
          "description": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "maxConfusionMatrixSize",
          "value": "20",
          "widget": "textfield",
          "title": "Max Confusion Matrix Size",
          "description": "[Deprecated] Maximum size (# classes) for confusion matrices to be printed in the Logs.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "buildTreeOneNode",
          "value": "false",
          "widget": "array",
          "title": "Build tree one node",
          "description": "Enables to run on a single node",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "colSampleRatePerTree",
          "value": "1.0",
          "widget": "textfield",
          "title": "Column Sample Rate Per Tree (from 0.0 to 1.0).",
          "description": "Column sample rate per tree (from 0.0 to 1.0).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "colSampleRateChangePerLevel",
          "value": "1.0",
          "widget": "textfield",
          "title": "Column Sample Rate change Per Level",
          "description": "Relative change of the column sampling rate for every level (must be > 0.0 and <= 2.0).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "scoreTreeInterval",
          "value": "0",
          "widget": "textfield",
          "title": "Score Tree Interval",
          "description": "Score the model after every so many trees. Disabled if set to 0.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "minSplitImprovement",
          "value": "1.0e-5",
          "widget": "textfield",
          "title": "Minimum Split Improvement",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "histogramType",
          "value": "AUTO",
          "widget": "array",
          "title": "Histogram Type",
          "description": "What type of histogram to use for finding optimal split points. Possible values are ",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "UniformAdaptive",
            "Random",
            "QuantilesGlobal",
            "RoundRobin",
            "UniformRobust"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "calibrateModel",
          "value": "false",
          "widget": "array",
          "title": "Calibrate Model",
          "description": "Use Platt Scaling to calculate calibrated class probabilities. Calibration can provide more accurate estimates of class probabilities.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "checkConstantResponse",
          "value": "true",
          "widget": "array",
          "title": "Check Constant Response",
          "description": "UCheck if response column is constant. If enabled, then an exception is thrown if the response column is a constant value.If disabled, then model will train regardless of the response column being a constant value or not.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "keepCrossValidationModels",
          "value": "true",
          "widget": "array",
          "title": "Keep Cross Validation Models",
          "description": "Whether to keep the cross-validated models. Keeping cross-validation models may consume significantly more memory in the H2O cluster.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "keepCrossValidationPredictions",
          "value": "false",
          "widget": "array",
          "title": "Keep Cross Validation Predictions",
          "description": "Whether to keep the predictions of the cross-validation predictions. This needs to be set to TRUE if running the same AutoML object for repeated runs because CV predictions are required to build additional Stacked Ensemble models in AutoML.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "keepCrossValidationFoldAssignment",
          "value": "false",
          "widget": "array",
          "title": "Keep Cross Validation Fold Assignment",
          "description": "Whether to keep cross-validation assignments.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "distribution",
          "value": "AUTO",
          "widget": "array",
          "title": "Distribution",
          "description": "Distribution function used by algorithms that support it; other algorithms use their defaults.",
          "optionsArray": [
            "AUTO",
            "bernoulli",
            "quasibinomial",
            "modified_huber",
            "multinomial",
            "ordinal",
            "gaussian",
            "poisson",
            "gamma",
            "tweedie",
            "huber",
            "laplace",
            "quantile",
            "fractionalbinomial",
            "negativebinomial",
            "custom"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "weightCol",
          "value": "",
          "widget": "variable",
          "title": "Weight Column",
          "description": "Column with observation weights. Giving some observation a weight of zero is equivalent to excluding it from the dataset; giving an observation a relative weight of 2 is equivalent to repeating that row twice. Negative weights are not allowed. Note: Weights are per-row observation weights and do not increase the size of the data frame. This is typically the number of times a row is repeated, but non-integer values are supported as well. During training, rows with higher weights matter more, due to the larger loss function pre-factor. If you set weight = 0 for a row, the returned prediction frame at that row is zero and this is incorrect. To get an accurate prediction, remove all rows with weight == 0.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "offsetCol",
          "value": "",
          "widget": "variable",
          "title": "Offset Column",
          "description": "Offset column. This will be added to the combination of columns before applying the link function.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "foldCol",
          "value": "",
          "widget": "variable",
          "title": "Fold Column",
          "description": "Column with cross-validation fold index assignment per observation.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "foldAssignment",
          "value": "AUTO",
          "widget": "array",
          "title": "Fold Assignment",
          "description": "Cross-validation fold assignment scheme, if fold_column is not specified. The 'Stratified' option will stratify the folds based on the response variable, for classification problems.",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "Random",
            "Modulo",
            "Stratified"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "aucType",
          "value": "AUTO",
          "widget": "array",
          "title": "AUC Type",
          "description": "Set default multinomial AUC type.",
          "optionsArray": [
            "AUTO",
            "NONE",
            "MACRO_OVR",
            "WEIGHTED_OVR",
            "MACRO_OVO",
            "WEIGHTED_OVO"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrix",
          "value": "",
          "widget": "tab",
          "title": "Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "output_confusion_matrix_chart",
          "value": "true",
          "widget": "array",
          "title": "Output Confusion Matrix Chart",
          "description": "whether to display confusion matrix chart.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "cm_chart_title",
          "value": "Confusion Matrix Chart",
          "widget": "textfield",
          "title": "Confusion Matrix Chart Title",
          "description": "Title name to display in Confusion Matrix Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "cm_chart_description",
          "value": "Visual Representation of Predicted vs. Actual Classes",
          "widget": "textfield",
          "title": "Confusion Matrix Chart Description",
          "description": " Description to display in Confusion Matrix CHart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixTargetLegend",
          "value": "Target",
          "widget": "textfield",
          "title": "Confusion Matrix Target Legend",
          "description": "Legend name to display for Target in Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixPredictedLabelLegend",
          "value": "PredictedLabel",
          "widget": "textfield",
          "title": "Confusion Matrix PredictedLabel Legend",
          "description": "Legend name to display for Predicted Label in Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ROC Curve",
          "value": "",
          "widget": "tab",
          "title": "ROC Curve",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "output_roc_curve",
          "value": "false",
          "widget": "array",
          "title": "Output ROC Curve",
          "description": "Whether to display confusion matrix chart.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "roc_title",
          "value": "Title",
          "widget": "textfield",
          "title": "ROC Curve Chart Title",
          "description": "Title name to display in ROC Curve Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "roc_description",
          "value": "Receiver operating characteristic (ROC) curve",
          "widget": "textfield",
          "title": "ROC Curve Chart Description",
          "description": "Add Description for ROC Curve Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "xlabel",
          "value": "False Positive Rate (specificity)",
          "widget": "textfield",
          "title": "X Label",
          "description": "X label",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ylabel",
          "value": "True Positive Rate (sensitivity)",
          "widget": "textfield",
          "title": "Y Label",
          "description": "Y Label",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "Grid Search",
          "value": "",
          "widget": "tab",
          "title": "Grid Search",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "paramKeys",
          "value": "[]",
          "widget": "key_array",
          "title": "Param Name",
          "description": "Param Names. eg: maxDepth ,learnRate, nTrees",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "paramValues",
          "value": "[]",
          "widget": "value_array",
          "title": "Param Value",
          "description": "Param Values. eg: 4,5,6",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridStrategy",
          "value": "Cartesian",
          "widget": "array",
          "title": "Grid Search Strategy",
          "description": "Strategy to use for model hyperparameter search. Cartesian does exhaustive search; RandomDiscrete searches randomly within given time or model limits.",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "Cartesian",
            "RandomDiscrete"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridMaxModels",
          "value": "0",
          "widget": "textfield",
          "title": "Grid Max Models",
          "description": "Maximum number of models to build in the grid search (0 for unlimited).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridMaxRuntimeSecs",
          "value": "0",
          "widget": "textfield",
          "title": "Grid Max Runtime Seconds",
          "description": "Maximum runtime in seconds for the grid search (0 for unlimited).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridStoppingRounds",
          "value": "3",
          "widget": "textfield",
          "title": "Grid Stopping Rounds",
          "description": "Early stopping based on convergence of the metric during grid search (0 to disable).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridStoppingTolerance",
          "value": "0.001",
          "widget": "textfield",
          "title": "Grid Stopping Tolerance",
          "description": "Tolerance for metric-based stopping criterion during grid search.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridStoppingMetric",
          "value": "AUTO",
          "widget": "array",
          "title": "Grid Stopping Metric",
          "description": "Metric to use for early stopping during grid search (AUTO: logloss for classification, deviance for regression).",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "deviance",
            "logloss",
            "MSE",
            "RMSE",
            "MAE",
            "RMSLE",
            "AUC",
            "AUCPR",
            "lift_top_group",
            "misclassification",
            "mean_per_class_error",
            "anomaly_score",
            "custom",
            "custom_increasing"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridParallelism",
          "value": "2",
          "widget": "textfield",
          "title": "Grid Parallelism",
          "description": "Level of parallelism to use when building models in the grid.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridSelectBestModelBy",
          "value": "AUTO",
          "widget": "array",
          "title": "Grid Select Best Model By",
          "description": "Metric used to select the best model from the grid.",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "logloss",
            "MSE",
            "RMSE",
            "MAE",
            "RMSLE",
            "AUC",
            "AUCPR"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "predictionCol",
          "value": "prediction",
          "widget": "textfield",
          "title": "Prediction Column",
          "description": "Prediction column name",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "detailedPredictionCol",
          "value": "detailed_prediction",
          "widget": "textfield",
          "title": "Detailed Prediction column",
          "description": "Column containing additional prediction details, its content depends on the model type",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "scala"
    },
    {
      "id": "33",
      "name": "Row Filter",
      "description": "This node creates a new DataFrame containing the rows that satisfy the given condition",
      "details": "<h2>Details</h2>\n<br>\nRow filter allows the user to filter out rows that do not meet a set condition. Rows that meet the condition are passed on to the next node in a new dataframe.<br>",
      "examples": "<h2>Examples of Conditional Expression</h2>\n<br>\nBelow are some examples of the Conditions Expression which can be used.<br>\n<br>\n<ul>\n<li> col1 > 5 AND col2 > 3</li>\n</ul>\n<ul>\n<li> name is not NULL</li>\n</ul>\n<ul>\n<li> name is NULL</li>\n</ul>\n<ul>\n<li> usd_pledged_real > 0 and (category = \"Narrative Film\" or category == \"Music\") and goal > 100</li>\n</ul>\n<ul>\n<li> dt > '2021-09-03'  (dt column is of type date)</li>\n</ul>\n<ul>\n<li> datetime > '2011-01-01 00:00:00.0'     (datetime column is of type timestamp)</li>\n</ul>\n<ul>\n<li> datetime > '2011-01-01 00:00:00.0' and datetime < '2016-01-01 00:00:00.0'</li>\n</ul>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeRowFilter",
      "x": "444.55px",
      "y": "162.133px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "conditionExpr",
          "value": "H2OMLAlgo = 'h2ODistributedRandomForest'\n\n--1=1",
          "widget": "code_editor",
          "type": "sparksql",
          "title": "Conditional Expression",
          "description": "The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real > 0 and (category = 1 or category == 2) and goal > 100",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "34",
      "name": "Decision",
      "description": "It computes expressions to determine if the condition is met or not. Accordingly proceeds to the next step or stops here.",
      "details": "<h2>Decision Node Details</h2>\n<br>\nIt evaluates an expression to determine if the condition is met or not. Based on the evaluation output it proceeds to the next step or stops the execution of the process.<br>\n<br>\nIf expression evaluates to true then incoming Dataframe is sent to the output node and it is executed otherwise execution terminates in this node.<br>\n<br>\n<h4>Input Parameters</h4>\n<ul>\n<li> OUTPUT STORAGE LEVEL : Keep this as DEFAULT.</li>\n<li> DESCRIPTION : Enter a short description on how the node is being used.</li>\n<li> VARIABLES : We can specify one or more evaluation criteria on the available columns</li>\n</ul>\n- Function : COUNT_RECORDS function which counts the number of records for the specified column<br>\n- Symbol : Evaluate the expression based on the criteria of greater than, less than or Is equal to<br>\n- Values :  The number of records against which the condition is to be evaluated<br>",
      "examples": "<h2>Decision Node Example</h2>\n<br>\nConsider the Decision node to be configured for a dataframe which contains the column of `PRD_CD` as shown below:<br>\n<br>\nCOLUMNS    |      FUNCTION        |    SYMBOL    |    VALUES \t<br>\n---------------------------------------------------------------<br>\nPRD_CD     |      COUNT_RECORDS   |    <         |    10<br>\n<br>\nIf count of entries in [PRD_CD] is less then 10, Only then would the execution process continue. If it evaluated to false then the execution stops at this node.<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeDecision",
      "x": "614.7px",
      "y": "157.717px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "inputCols",
          "value": "[\"CUSTOMER_ID\"]",
          "widget": "variables_list_select",
          "title": "Columns",
          "description": "Columns",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "functions",
          "value": "[\"COUNT_RECORDS\"]",
          "widget": "variables_list_array",
          "title": "Function",
          "description": "Function to apply",
          "optionsArray": [
            "COUNT_RECORDS"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "symbols",
          "value": "[\">\"]",
          "widget": "variables_list_array",
          "title": "Symbol",
          "description": "Symbol to apply",
          "optionsArray": [
            "<",
            "==",
            ">"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "values",
          "value": "[\"1\"]",
          "widget": "variables_list_textfield",
          "title": "Values",
          "description": "Values",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "35",
      "name": "Split",
      "description": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).",
      "details": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data.<br>\n<br>\nFor example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).<br>\n<br>\nThe split node can be used for splitting the DataFrame for training and test datasets used in Machine Learning.<br>",
      "examples": "lets say you pass a table with 5 rows and the fraction .6(60%),the first and second outcomes of the node will give dataframes as follows<br>\n<br>\nFirst<br>\nPartID\tSupplierID\tPartName\t<br>\nStringType\tStringType\tStringType\t<br>\nP9271\tS798\tPart_D\t<br>\nP523\tS955\tPart_K\t<br>\nP3201\tS332\tPart_M\t<br>\n<br>\n<br>\nSecond<br>\nPartID\tSupplierID\tPartName\t<br>\nStringType\tStringType\tStringType\t<br>\nP9634\tS527\tPart_G\t<br>\nP9345\tS850\tPart_M<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.ml.NodeSplit",
      "x": "871.45px",
      "y": "152.233px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "fraction1",
          "value": ".8",
          "widget": "textfield",
          "title": "Fraction 1",
          "description": "Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "36",
      "name": "H2O Score",
      "description": "",
      "details": "<h2> H2O Score Node</h2>\n<br>\nThis node scores a new dataset using an existing H2O model. It takes a trained H2O model and an input DataFrame as input and generates predictions.<br>",
      "examples": "<h2> H2O Score Node Example</h2>\n<br>\nScenario:<br>\n<br>\nLet's say you have trained an H2O model to predict customer churn. You can use the H2O Score node to apply this model to a new dataset of customer data and generate churn predictions.<br>\n<br>\nConfiguration:<br>\n<br>\n1. **H2O Model:** Select the trained H2O model to use for scoring from model load node<br>\n2. **Output Storage Level:** Choose the storage level for the output DataFrame.<br>\n<br>\nOutput:<br>\n<br>\nThe node will output a new DataFrame containing the original input data along with the predicted values.<br>",
      "type": "ml-predict",
      "nodeClass": "fire.nodes.h2o.NodeH2OScore",
      "x": "1057.93px",
      "y": "295.531px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "isTestData",
          "value": "true",
          "widget": "array",
          "title": "is Test Data",
          "description": "To enable the test metrics.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "label",
          "value": "",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model Transformation.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "withContribution",
          "value": "true",
          "widget": "array",
          "title": "Compute Shapley Values",
          "description": "Compute Shapley Values and it supported for Regression and Binomial Classification problem.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "path",
          "value": "",
          "widget": "textfield",
          "title": "Path",
          "description": "Path to save the Shapley contributions for test dataset.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "modelType",
          "value": "Other",
          "widget": "array",
          "title": "Model Type",
          "description": "Select the type of the model.",
          "datatypes": [
            "String"
          ],
          "optionsArray": [
            "Classification",
            "Regression",
            "Other"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrix",
          "value": "",
          "widget": "tab",
          "title": "Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "output_confusion_matrix_chart",
          "value": "false",
          "widget": "array",
          "title": "Output Confusion Matrix Chart",
          "description": "Whether to display Confusion Matrix Chart.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "cmChartTitle",
          "value": "Title",
          "widget": "textfield",
          "title": "Confusion Matrix Chart Title",
          "description": "Title name to display in Confusion Matrix Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "cmChartDescription",
          "value": "Visual Representation of Predicted vs. Actual Classes",
          "widget": "textfield",
          "title": "Confusion Matrix Chart Description",
          "description": "Description to display in Confusion Matrix Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixTargetLegend",
          "value": "Target",
          "widget": "textfield",
          "title": "Confusion Matrix Target Legend",
          "description": "Legend name to display for Target in Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixPredictedLabelLegend",
          "value": "PredictedLabel",
          "widget": "textfield",
          "title": "Confusion Matrix PredictedLabel Legend",
          "description": "Legend name to display for Predicted Label in Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "Description",
          "value": "",
          "widget": "tab",
          "title": "Confusion Matrix Description",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixRowDescription",
          "value": "",
          "widget": "textarea_rich",
          "title": "Confusion Matrix Outcome description",
          "description": "Add the business details of the outcome of the confusion matrix rows",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ROC Curve",
          "value": "",
          "widget": "tab",
          "title": "ROC Curve",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "output_roc_chart",
          "value": "false",
          "widget": "array",
          "title": "Output ROC Curve",
          "description": "Whether to display confusion matrix chart.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "roc_title",
          "value": "ROC Chart",
          "widget": "textfield",
          "title": "ROC Curve Chart Title",
          "description": "Title name to display in ROC Curve Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "roc_description",
          "value": "Receiver operating characteristic (ROC) curve",
          "widget": "textfield",
          "title": "ROC Curve Chart Description",
          "description": "Add Description for ROC Curve Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "xlabel",
          "value": "False Positive Rate (specificity)",
          "widget": "textfield",
          "title": "X Label",
          "description": "X label",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ylabel",
          "value": "True Positive Rate (sensitivity)",
          "widget": "textfield",
          "title": "Y Label",
          "description": "Y Label",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "scala"
    },
    {
      "id": "45",
      "name": "Row Filter",
      "description": "This node creates a new DataFrame containing the rows that satisfy the given condition",
      "details": "<h2>Details</h2>\n<br>\nRow filter allows the user to filter out rows that do not meet a set condition. Rows that meet the condition are passed on to the next node in a new dataframe.<br>",
      "examples": "<h2>Examples of Conditional Expression</h2>\n<br>\nBelow are some examples of the Conditions Expression which can be used.<br>\n<br>\n<ul>\n<li> col1 > 5 AND col2 > 3</li>\n</ul>\n<ul>\n<li> name is not NULL</li>\n</ul>\n<ul>\n<li> name is NULL</li>\n</ul>\n<ul>\n<li> usd_pledged_real > 0 and (category = \"Narrative Film\" or category == \"Music\") and goal > 100</li>\n</ul>\n<ul>\n<li> dt > '2021-09-03'  (dt column is of type date)</li>\n</ul>\n<ul>\n<li> datetime > '2011-01-01 00:00:00.0'     (datetime column is of type timestamp)</li>\n</ul>\n<ul>\n<li> datetime > '2011-01-01 00:00:00.0' and datetime < '2016-01-01 00:00:00.0'</li>\n</ul>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeRowFilter",
      "x": "465.95px",
      "y": "425.55px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "conditionExpr",
          "value": "H2OMLAlgo = 'h2OGradientBoostingMachine'\n\n--1=1",
          "widget": "code_editor",
          "type": "sparksql",
          "title": "Conditional Expression",
          "description": "The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real > 0 and (category = 1 or category == 2) and goal > 100",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "46",
      "name": "Decision",
      "description": "It computes expressions to determine if the condition is met or not. Accordingly proceeds to the next step or stops here.",
      "details": "<h2>Decision Node Details</h2>\n<br>\nIt evaluates an expression to determine if the condition is met or not. Based on the evaluation output it proceeds to the next step or stops the execution of the process.<br>\n<br>\nIf expression evaluates to true then incoming Dataframe is sent to the output node and it is executed otherwise execution terminates in this node.<br>\n<br>\n<h4>Input Parameters</h4>\n<ul>\n<li> OUTPUT STORAGE LEVEL : Keep this as DEFAULT.</li>\n<li> DESCRIPTION : Enter a short description on how the node is being used.</li>\n<li> VARIABLES : We can specify one or more evaluation criteria on the available columns</li>\n</ul>\n- Function : COUNT_RECORDS function which counts the number of records for the specified column<br>\n- Symbol : Evaluate the expression based on the criteria of greater than, less than or Is equal to<br>\n- Values :  The number of records against which the condition is to be evaluated<br>",
      "examples": "<h2>Decision Node Example</h2>\n<br>\nConsider the Decision node to be configured for a dataframe which contains the column of `PRD_CD` as shown below:<br>\n<br>\nCOLUMNS    |      FUNCTION        |    SYMBOL    |    VALUES \t<br>\n---------------------------------------------------------------<br>\nPRD_CD     |      COUNT_RECORDS   |    <         |    10<br>\n<br>\nIf count of entries in [PRD_CD] is less then 10, Only then would the execution process continue. If it evaluated to false then the execution stops at this node.<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeDecision",
      "x": "618.083px",
      "y": "417.083px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "inputCols",
          "value": "[\"CUSTOMER_ID\"]",
          "widget": "variables_list_select",
          "title": "Columns",
          "description": "Columns",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "functions",
          "value": "[\"COUNT_RECORDS\"]",
          "widget": "variables_list_array",
          "title": "Function",
          "description": "Function to apply",
          "optionsArray": [
            "COUNT_RECORDS"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "symbols",
          "value": "[\">\"]",
          "widget": "variables_list_array",
          "title": "Symbol",
          "description": "Symbol to apply",
          "optionsArray": [
            "<",
            "==",
            ">"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "values",
          "value": "[\"1\"]",
          "widget": "variables_list_textfield",
          "title": "Values",
          "description": "Values",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "47",
      "name": "Split",
      "description": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).",
      "details": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data.<br>\n<br>\nFor example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).<br>\n<br>\nThe split node can be used for splitting the DataFrame for training and test datasets used in Machine Learning.<br>",
      "examples": "lets say you pass a table with 5 rows and the fraction .6(60%),the first and second outcomes of the node will give dataframes as follows<br>\n<br>\nFirst<br>\nPartID\tSupplierID\tPartName\t<br>\nStringType\tStringType\tStringType\t<br>\nP9271\tS798\tPart_D\t<br>\nP523\tS955\tPart_K\t<br>\nP3201\tS332\tPart_M\t<br>\n<br>\n<br>\nSecond<br>\nPartID\tSupplierID\tPartName\t<br>\nStringType\tStringType\tStringType\t<br>\nP9634\tS527\tPart_G\t<br>\nP9345\tS850\tPart_M<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.ml.NodeSplit",
      "x": "898.95px",
      "y": "424.55px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "fraction1",
          "value": ".8",
          "widget": "textfield",
          "title": "Fraction 1",
          "description": "Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "48",
      "name": "H2O Score",
      "description": "",
      "details": "<h2> H2O Score Node</h2>\n<br>\nThis node scores a new dataset using an existing H2O model. It takes a trained H2O model and an input DataFrame as input and generates predictions.<br>",
      "examples": "<h2> H2O Score Node Example</h2>\n<br>\nScenario:<br>\n<br>\nLet's say you have trained an H2O model to predict customer churn. You can use the H2O Score node to apply this model to a new dataset of customer data and generate churn predictions.<br>\n<br>\nConfiguration:<br>\n<br>\n1. **H2O Model:** Select the trained H2O model to use for scoring from model load node<br>\n2. **Output Storage Level:** Choose the storage level for the output DataFrame.<br>\n<br>\nOutput:<br>\n<br>\nThe node will output a new DataFrame containing the original input data along with the predicted values.<br>",
      "type": "ml-predict",
      "nodeClass": "fire.nodes.h2o.NodeH2OScore",
      "x": "1004.17px",
      "y": "599.45px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "isTestData",
          "value": "true",
          "widget": "array",
          "title": "is Test Data",
          "description": "To enable the test metrics.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "label",
          "value": "",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model Transformation.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "withContribution",
          "value": "true",
          "widget": "array",
          "title": "Compute Shapley Values",
          "description": "Compute Shapley Values and it supported for Regression and Binomial Classification problem.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "path",
          "value": "",
          "widget": "textfield",
          "title": "Path",
          "description": "Path to save the Shapley contributions for test dataset.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "modelType",
          "value": "Other",
          "widget": "array",
          "title": "Model Type",
          "description": "Select the type of the model.",
          "datatypes": [
            "String"
          ],
          "optionsArray": [
            "Classification",
            "Regression",
            "Other"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrix",
          "value": "",
          "widget": "tab",
          "title": "Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "output_confusion_matrix_chart",
          "value": "false",
          "widget": "array",
          "title": "Output Confusion Matrix Chart",
          "description": "Whether to display Confusion Matrix Chart.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "cmChartTitle",
          "value": "Title",
          "widget": "textfield",
          "title": "Confusion Matrix Chart Title",
          "description": "Title name to display in Confusion Matrix Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "cmChartDescription",
          "value": "Visual Representation of Predicted vs. Actual Classes",
          "widget": "textfield",
          "title": "Confusion Matrix Chart Description",
          "description": "Description to display in Confusion Matrix Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixTargetLegend",
          "value": "Target",
          "widget": "textfield",
          "title": "Confusion Matrix Target Legend",
          "description": "Legend name to display for Target in Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixPredictedLabelLegend",
          "value": "PredictedLabel",
          "widget": "textfield",
          "title": "Confusion Matrix PredictedLabel Legend",
          "description": "Legend name to display for Predicted Label in Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "Description",
          "value": "",
          "widget": "tab",
          "title": "Confusion Matrix Description",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixRowDescription",
          "value": "",
          "widget": "textarea_rich",
          "title": "Confusion Matrix Outcome description",
          "description": "Add the business details of the outcome of the confusion matrix rows",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ROC Curve",
          "value": "",
          "widget": "tab",
          "title": "ROC Curve",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "output_roc_chart",
          "value": "false",
          "widget": "array",
          "title": "Output ROC Curve",
          "description": "Whether to display confusion matrix chart.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "roc_title",
          "value": "ROC Chart",
          "widget": "textfield",
          "title": "ROC Curve Chart Title",
          "description": "Title name to display in ROC Curve Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "roc_description",
          "value": "Receiver operating characteristic (ROC) curve",
          "widget": "textfield",
          "title": "ROC Curve Chart Description",
          "description": "Add Description for ROC Curve Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "xlabel",
          "value": "False Positive Rate (specificity)",
          "widget": "textfield",
          "title": "X Label",
          "description": "X label",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ylabel",
          "value": "True Positive Rate (sensitivity)",
          "widget": "textfield",
          "title": "Y Label",
          "description": "Y Label",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "scala"
    },
    {
      "id": "51",
      "name": "H2O Gradient Boosting Machine",
      "description": "Gradient Boosting Machine (for Regression and Classification) is a forward learning ensemble method",
      "details": "Gradient Boosting Machine (for Regression and Classification) is a forward learning ensemble method. The guiding heuristic is that good predictive results can be obtained through increasingly refined approximations. H2O’s GBM sequentially builds regression trees on all the features of the dataset in a fully distributed way - each tree is built in parallel.<br>\n<br>\nMore details are available at : <a href=\"http://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/gbm.html\" target=\"_blank\">docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/gbm.html</a><br>",
      "examples": "",
      "type": "ml-estimator",
      "nodeClass": "fire.nodes.h2o.NodeH2OGbm",
      "x": "1069.38px",
      "y": "418.583px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "isResponseIsCategorical",
          "value": "true",
          "widget": "array",
          "title": "Is Response Column Categorical",
          "description": "Specify a response column type(numeric or categorical). Separates the Classification and Regression",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "labelCol",
          "value": "Actuals",
          "widget": "variable",
          "title": "Label Column",
          "description": "Response variable column.",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "featuresCols",
          "value": "[]",
          "widget": "variables",
          "title": "Feature Columns",
          "description": "Features to be used for Modelling",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "path",
          "value": "",
          "widget": "textfield",
          "title": "Path",
          "description": "Save Confusion Matrix to Path",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "columnsToCategorical",
          "value": "[]",
          "widget": "variables",
          "title": "Columns to Categorical",
          "description": "Columns to be Categorical encoded",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "seed",
          "value": "-1",
          "widget": "textfield",
          "title": "Seed",
          "description": "Seed for pseudo random number generator (if applicable).",
          "datatypes": [
            "Long"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "balanceClasses",
          "value": "false",
          "widget": "textfield",
          "title": "Balance Classes",
          "description": "Balance training data class counts via over/under-sampling (for imbalanced data).",
          "datatypes": [
            "boolean"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "splitRatio",
          "value": "1.0",
          "widget": "textfield",
          "title": "Split Ratio",
          "description": "Split Ratio",
          "datatypes": [
            "float"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "nfolds",
          "value": "0",
          "widget": "textfield",
          "title": "Number of Folds",
          "description": "Number of folds for K-fold cross-validation (0 to disable or >= 2).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ntrees",
          "value": "50",
          "widget": "textfield",
          "title": "Number of Trees",
          "description": "Number of trees.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "maxDepth",
          "value": "5",
          "widget": "textfield",
          "title": "Max Depth",
          "description": "Maximum tree depth (0 for unlimited).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "minRows",
          "value": "10.0",
          "widget": "textfield",
          "title": "Min Rows",
          "description": "Fewest allowed (weighted) observations in a leaf.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "nbins",
          "value": "20",
          "widget": "textfield",
          "title": "Number of Bins",
          "description": "For numerical columns (real/int), build a histogram of (at least) this many bins, then split at the best point.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "nbinsTopLevel",
          "value": "1024",
          "widget": "textfield",
          "title": "Number of bins top level",
          "description": "For numerical columns (real/int), build a histogram of (at most) this many bins at the root level, then decrease by factor of two per level.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "nbinsCats",
          "value": "1024",
          "widget": "textfield",
          "title": "Number of Bins Categoricals",
          "description": "For categorical columns (factors), build a histogram of this many bins, then split at the best point. Higher values can lead to more overfitting.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "categoricalEncoding",
          "value": "AUTO",
          "widget": "array",
          "title": "Categorical Encoding",
          "description": "Specify one of the various encoding schemes for handling categorical features",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "OneHotInternal",
            "OneHotExplicit",
            "Enum",
            " Binary",
            "Eigen",
            "LabelEncode",
            "SortByResponse",
            "EnumLimited"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ignoreConstCols",
          "value": "true",
          "widget": "array",
          "title": "Ignore Const Columns",
          "description": "Ignore constant columns.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "scoreEachIteration",
          "value": "false",
          "widget": "array",
          "title": "Score Each Iteration",
          "description": "Whether to score during each iteration of model training.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "stoppingRounds",
          "value": "0",
          "widget": "textfield",
          "title": "Stopping Rounds",
          "description": "Early stopping based on convergence of stopping_metric. Stop if simple moving average of length k of the stopping_metric does not improve for k:=stopping_rounds scoring events (0 to disable).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "maxRuntimeSecs",
          "value": "0.0",
          "widget": "textfield",
          "title": "Max Runtime Secs",
          "description": "his argument specifies the maximum time that the AutoML process will run for. If both max_runtime_secs and max_models are specified, then the AutoML run will stop as soon as it hits either of these limits. If neither max_runtime_secs nor max_models are specified, then max_runtime_secs defaults to 3600 seconds (1 hour).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "stoppingMetric",
          "value": "AUTO",
          "widget": "array",
          "title": "StoppingMetric",
          "description": "Metric to use for early stopping (AUTO: logloss for classification, deviance for regression)",
          "optionsArray": [
            "AUTO",
            "deviance",
            "logloss",
            "MSE",
            "RMSE",
            "MAE",
            "RMSLE",
            "AUC",
            "AUCPR",
            "lift_top_group",
            "misclassification",
            "mean_per_class_error",
            "anomaly_score",
            "custom",
            "custom_increasing"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "stoppingTolerance",
          "value": "0.001",
          "widget": "textfield",
          "title": "StoppingTolerance",
          "description": "Relative tolerance for metric-based stopping criterion (stop if relative improvement is not at least this much)",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gainsliftBins",
          "value": "-1",
          "widget": "textfield",
          "title": "Gains Lift Bins",
          "description": "Gains/Lift table number of bins. 0 means disabled.. Default value -1 means automatic binning.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "withContributions",
          "value": "true",
          "widget": "array",
          "title": "With Contributions",
          "description": "Enables or disables generating a sub-column of detailedPredictionCol containing Shapley values.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "learnRate",
          "value": "0.1",
          "widget": "textfield",
          "title": "Learn Rate",
          "description": "Learning rate (from 0.0 to 1.0).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "advanced",
          "value": "",
          "widget": "tab",
          "title": "Advanced",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "convertUnknownCategoricalLevelsToNa",
          "value": "true",
          "widget": "array",
          "title": "Convert Unknown Categorical Levels to NA",
          "description": "If set to ‘true’, the model converts unknown categorical levels to NA during making predictions.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "withLeafNodeAssignments",
          "value": "false",
          "widget": "array",
          "title": "With Node Assignments",
          "description": "Enables or disables computation of leaf node assignments.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "withStageResults",
          "value": "false",
          "widget": "array",
          "title": "With Stage Results",
          "description": "Enables or disables computation of stage results.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "learnRateAnnealing",
          "value": "1.0",
          "widget": "textfield",
          "title": "Learn Rate Annealing",
          "description": "Scale the learning rate by this factor after each tree (e.g., 0.99 or 0.999) .",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "sampleRate",
          "value": "1.0",
          "widget": "textfield",
          "title": "Sample Rate",
          "description": "Row sample rate per tree (from 0.0 to 1.0).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "colSampleRate",
          "value": "1.0",
          "widget": "textfield",
          "title": "Column Sample Rate",
          "description": "Column sample rate(from 0.0 to 1.0).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "maxAbsLeafnodePred",
          "value": "1.7976931348623157e308",
          "widget": "textfield",
          "title": "Max Absolute Leaf Node Prediction",
          "description": "Maximum absolute value of a leaf node prediction.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "predNoiseBandwidth",
          "value": "0.0",
          "widget": "textfield",
          "title": "Prediction Noise Bandwidth",
          "description": "Bandwidth (sigma) of Gaussian multiplicative noise ~N(1,sigma) for tree node predictions.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "maxAfterBalanceSize",
          "value": "5.0",
          "widget": "textfield",
          "title": "Max After Balance Size",
          "description": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "maxConfusionMatrixSize",
          "value": "20",
          "widget": "textfield",
          "title": "Max Confusion Matrix Size",
          "description": "[Deprecated] Maximum size (# classes) for confusion matrices to be printed in the Logs.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "buildTreeOneNode",
          "value": "false",
          "widget": "array",
          "title": "Build tree one node",
          "description": "Enables to run on a single node",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "colSampleRatePerTree",
          "value": "1.0",
          "widget": "textfield",
          "title": "Column Sample Rate Per Tree (from 0.0 to 1.0).",
          "description": "Column sample rate per tree (from 0.0 to 1.0).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "colSampleRateChangePerLevel",
          "value": "1.0",
          "widget": "textfield",
          "title": "Column Sample Rate change Per Level",
          "description": "Relative change of the column sampling rate for every level (must be > 0.0 and <= 2.0).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "scoreTreeInterval",
          "value": "0",
          "widget": "textfield",
          "title": "Score Tree Interval",
          "description": "Score the model after every so many trees. Disabled if set to 0.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "minSplitImprovement",
          "value": "1.0e-5",
          "widget": "textfield",
          "title": "Minimum Split Improvement",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "histogramType",
          "value": "AUTO",
          "widget": "array",
          "title": "Histogram Type",
          "description": "What type of histogram to use for finding optimal split points. Possible values are ",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "UniformAdaptive",
            "Random",
            "QuantilesGlobal",
            "RoundRobin",
            "UniformRobust"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "calibrateModel",
          "value": "false",
          "widget": "array",
          "title": "Calibrate Model",
          "description": "Use Platt Scaling to calculate calibrated class probabilities. Calibration can provide more accurate estimates of class probabilities.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "checkConstantResponse",
          "value": "true",
          "widget": "array",
          "title": "Check Constant Response",
          "description": "UCheck if response column is constant. If enabled, then an exception is thrown if the response column is a constant value.If disabled, then model will train regardless of the response column being a constant value or not.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "keepCrossValidationModels",
          "value": "true",
          "widget": "array",
          "title": "Keep Cross Validation Models",
          "description": "Whether to keep the cross-validated models. Keeping cross-validation models may consume significantly more memory in the H2O cluster.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "keepCrossValidationPredictions",
          "value": "false",
          "widget": "array",
          "title": "Keep Cross Validation Predictions",
          "description": "Whether to keep the predictions of the cross-validation predictions. This needs to be set to TRUE if running the same AutoML object for repeated runs because CV predictions are required to build additional Stacked Ensemble models in AutoML.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "keepCrossValidationFoldAssignment",
          "value": "false",
          "widget": "array",
          "title": "Keep Cross Validation Fold Assignment",
          "description": "Whether to keep cross-validation assignments.",
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "tweediePower",
          "value": "1.5",
          "widget": "textfield",
          "title": "Tweedie Power",
          "description": "Tweedie power for Tweedie regression, must be between 1 and 2.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "quantileAlpha",
          "value": "0.5",
          "widget": "textfield",
          "title": "Quantile Alhpa",
          "description": "Desired quantile for Quantile regression, must be between 0 and 1.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "huberAlpha",
          "value": "0.9",
          "widget": "textfield",
          "title": "Huber Alpha",
          "description": "Desired quantile for Huber/M-regression (threshold between quadratic and linear loss, must be between 0 and 1).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "weightCol",
          "value": "",
          "widget": "variable",
          "title": "Weight Column",
          "description": "Column with observation weights. Giving some observation a weight of zero is equivalent to excluding it from the dataset; giving an observation a relative weight of 2 is equivalent to repeating that row twice. Negative weights are not allowed. Note: Weights are per-row observation weights and do not increase the size of the data frame. This is typically the number of times a row is repeated, but non-integer values are supported as well. During training, rows with higher weights matter more, due to the larger loss function pre-factor. If you set weight = 0 for a row, the returned prediction frame at that row is zero and this is incorrect. To get an accurate prediction, remove all rows with weight == 0.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "offsetCol",
          "value": "",
          "widget": "variable",
          "title": "Offset Column",
          "description": "Offset column. This will be added to the combination of columns before applying the link function.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "foldCol",
          "value": "",
          "widget": "variable",
          "title": "Fold Column",
          "description": "Column with cross-validation fold index assignment per observation.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "foldAssignment",
          "value": "AUTO",
          "widget": "array",
          "title": "Fold Assignment",
          "description": "Cross-validation fold assignment scheme, if fold_column is not specified. The 'Stratified' option will stratify the folds based on the response variable, for classification problems.",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "Random",
            "Modulo",
            "Stratified"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "aucType",
          "value": "AUTO",
          "widget": "array",
          "title": "AUC Type",
          "description": "Set default multinomial AUC type.",
          "optionsArray": [
            "AUTO",
            "NONE",
            "MACRO_OVR",
            "WEIGHTED_OVR",
            "MACRO_OVO",
            "WEIGHTED_OVO"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrix",
          "value": "",
          "widget": "tab",
          "title": "Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "output_confusion_matrix_chart",
          "value": "true",
          "widget": "array",
          "title": "Output Confusion Matrix Chart",
          "description": "whether to display confusion matrix chart.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "cm_chart_title",
          "value": "Confusion Matrix Chart",
          "widget": "textfield",
          "title": "Confusion Matrix Chart Title",
          "description": "Title name to display in Confusion Matrix Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "cm_chart_description",
          "value": "Visual Representation of Predicted vs. Actual Classes",
          "widget": "textfield",
          "title": "Confusion Matrix Chart Description",
          "description": " Description to display in Confusion Matrix CHart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixTargetLegend",
          "value": "Target",
          "widget": "textfield",
          "title": "Confusion Matrix Target Legend",
          "description": "Legend name to display for Target in Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "confusionMatrixPredictedLabelLegend",
          "value": "PredictedLabel",
          "widget": "textfield",
          "title": "Confusion Matrix PredictedLabel Legend",
          "description": "Legend name to display for Predicted Label in Confusion Matrix",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ROC Curve",
          "value": "",
          "widget": "tab",
          "title": "ROC Curve",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "output_roc_curve",
          "value": "false",
          "widget": "array",
          "title": "Output ROC Curve",
          "description": "Whether to display confusion matrix chart.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "roc_title",
          "value": "Title",
          "widget": "textfield",
          "title": "ROC Curve Chart Title",
          "description": "Title name to display in ROC Curve Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "roc_description",
          "value": "Receiver operating characteristic (ROC) curve",
          "widget": "textfield",
          "title": "ROC Curve Chart Description",
          "description": "Add Description for ROC Curve Chart",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "xlabel",
          "value": "False Positive Rate (specificity)",
          "widget": "textfield",
          "title": "X Label",
          "description": "X label",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ylabel",
          "value": "True Positive Rate (sensitivity)",
          "widget": "textfield",
          "title": "Y Label",
          "description": "Y Label",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "Grid Search",
          "value": "",
          "widget": "tab",
          "title": "Grid Search",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "paramKeys",
          "value": "[]",
          "widget": "key_array",
          "title": "Param Name",
          "description": "Param Names. eg: maxDepth ,learnRate, nTrees,distribution",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "paramValues",
          "value": "[]",
          "widget": "value_array",
          "title": "Param Value",
          "description": "Enter comma separated values.eg: 4,5,6, eg: gaussian, gamma, bernoulli",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridStrategy",
          "value": "Cartesian",
          "widget": "array",
          "title": "Grid Search Strategy",
          "description": "Strategy to use for model hyperparameter search. Cartesian does exhaustive search; RandomDiscrete searches randomly within given time or model limits.",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "Cartesian",
            "RandomDiscrete"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridMaxModels",
          "value": "0",
          "widget": "textfield",
          "title": "Grid Max Models",
          "description": "Maximum number of models to build in the grid search (0 for unlimited).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridMaxRuntimeSecs",
          "value": "0",
          "widget": "textfield",
          "title": "Grid Max Runtime Seconds",
          "description": "Maximum runtime in seconds for the grid search (0 for unlimited).",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridStoppingRounds",
          "value": "3",
          "widget": "textfield",
          "title": "Grid Stopping Rounds",
          "description": "Early stopping based on convergence of the metric during grid search (0 to disable).",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridStoppingTolerance",
          "value": "0.001",
          "widget": "textfield",
          "title": "Grid Stopping Tolerance",
          "description": "Tolerance for metric-based stopping criterion during grid search.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridStoppingMetric",
          "value": "AUTO",
          "widget": "array",
          "title": "Grid Stopping Metric",
          "description": "Metric to use for early stopping during grid search (AUTO: logloss for classification, deviance for regression).",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "deviance",
            "logloss",
            "MSE",
            "RMSE",
            "MAE",
            "RMSLE",
            "AUC",
            "AUCPR",
            "lift_top_group",
            "misclassification",
            "mean_per_class_error",
            "anomaly_score",
            "custom",
            "custom_increasing"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridParallelism",
          "value": "2",
          "widget": "textfield",
          "title": "Grid Parallelism",
          "description": "Level of parallelism to use when building models in the grid.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "gridSelectBestModelBy",
          "value": "AUTO",
          "widget": "array",
          "title": "Grid Select Best Model By",
          "description": "Metric used to select the best model from the grid.",
          "datatypes": [
            "string"
          ],
          "optionsArray": [
            "AUTO",
            "logloss",
            "MSE",
            "RMSE",
            "MAE",
            "RMSLE",
            "AUC",
            "AUCPR"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "predictionCol",
          "value": "prediction",
          "widget": "textfield",
          "title": "Prediction Column",
          "description": "Prediction column name",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "detailedPredictionCol",
          "value": "detailed_prediction",
          "widget": "textfield",
          "title": "Detailed Prediction column",
          "description": "Column containing additional prediction details, its content depends on the model type",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "scala"
    },
    {
      "id": "56",
      "name": "H2O ML Model Save",
      "description": "Saves an H2O MOJO ML model at the specified path.",
      "details": "this node saves the tained H2O model in the file system to be used in the future<br>",
      "examples": "path-folder1/folder2/ModelFileName<br>\n<br>\nthe trained model will be saved to the given path,any folder not present will be created and exisiting model in the folder of the will be replaced<br>",
      "type": "ml-modelsave",
      "nodeClass": "fire.nodes.h2o.NodeH2OMojoSave",
      "x": "1233.05px",
      "y": "143.019px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "path",
          "value": "data/CPG/CPG-Churn-Prediction-B2B/Models/H2o-DRF",
          "widget": "textfield",
          "title": "Path",
          "description": "Path for saving the H2O MOJO",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "fixedPath",
          "value": "true",
          "widget": "array",
          "title": "Static path",
          "description": "Set this to true if you want model to be saved in a static path. It will overwrite the model in the directory specified.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "scala"
    },
    {
      "id": "58",
      "name": "H2O ML Model Save",
      "description": "Saves an H2O MOJO ML model at the specified path.",
      "details": "this node saves the tained H2O model in the file system to be used in the future<br>",
      "examples": "path-folder1/folder2/ModelFileName<br>\n<br>\nthe trained model will be saved to the given path,any folder not present will be created and exisiting model in the folder of the will be replaced<br>",
      "type": "ml-modelsave",
      "nodeClass": "fire.nodes.h2o.NodeH2OMojoSave",
      "x": "1227.52px",
      "y": "418.083px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "path",
          "value": "data/CPG/CPG-Churn-Prediction-B2B/Models/H2o-GBM",
          "widget": "textfield",
          "title": "Path",
          "description": "Path for saving the H2O MOJO",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "fixedPath",
          "value": "true",
          "widget": "array",
          "title": "Static path",
          "description": "Set this to true if you want model to be saved in a static path. It will overwrite the model in the directory specified.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "scala"
    },
    {
      "id": "61",
      "name": "Add  Columns",
      "description": "This node allows adding new columns with certain values",
      "details": "It creates a new DataFrame by adding new columns to the input Dataframe. <br>\n<br>\nNew columns can be created for Current Date value, Current Datetime value, a Constant String value or a Constant Integer value.<br>\n<br>\nNames for new columns along with values can be provided.<br>",
      "examples": "If option for adding new columns is selected as below with new column names specified in bracket<br>\n<br>\n<ul>\n<li> CURRENT DATE (Column Name CURRENT_DATE)</li>\n<li> CURRENT TIME (Column Name CURRENT_TIME)</li>\n<li> STRING Column with a value DrillMachine (Column Name MACHINE_NAME)</li>\n<li> INTEGER column with a value 100 (Column Name MACHINE_WEIGHT)</li>\n</ul>\nthen following columns would be added to the output Dataframe with mentioned values:<br>\n<br>\n<ul>\n<li> CURRENT_DATE : 2021-10-22 </li>\n<li> CURRENT_TIME : 2021-10-22 04:34:00.532</li>\n<li> MACHINE_NAME : DrillMachine</li>\n<li> MACHINE_WEIGHT : 100</li>\n</ul>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeAddColumns",
      "x": "315.85px",
      "y": "167.85px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "addCurrentDateCol",
          "value": "false",
          "widget": "array",
          "title": "Add Current Date Column",
          "description": "Whether to add the current date as a new column",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "currentDateColName",
          "value": "",
          "widget": "textfield",
          "title": "Current Date Column Name",
          "description": "Name of the new Current Date Column Created",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "addCurrentTimeCol",
          "value": "false",
          "widget": "array",
          "title": "Add Current Time Column",
          "description": "Whether to add the current time as a new column",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "currentTimeColName",
          "value": "",
          "widget": "textfield",
          "title": "Current Time Column Name",
          "description": "Name of the new Current Time Column Created",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "addConstantStringCol1",
          "value": "true",
          "widget": "array",
          "title": "Add Constant String Column",
          "description": "Whether to add a new columns with constant string value",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "constantStringColName1",
          "value": "H2OMLAlgo",
          "widget": "textfield",
          "title": "Constant String Column Name",
          "description": "Constant String Name",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "constantStringColValue1",
          "value": "${selectH2OModel}",
          "widget": "textfield",
          "title": "Constant String Column Value",
          "description": "Constant String Value",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "addConstantIntCol1",
          "value": "false",
          "widget": "array",
          "title": "Add Constant Integer Column",
          "description": "Whether to add a new columns with constant integer value",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "constantIntColName1",
          "value": "",
          "widget": "textfield",
          "title": "Constant Integer Column Name",
          "description": "Constant Integer Column Name",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "constantIntColValue1",
          "value": "",
          "widget": "textfield",
          "title": "Constant Integer Column Value",
          "description": "Constant Integer Value",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "addConstantDoubleCol1",
          "value": "false",
          "widget": "array",
          "title": "Add Constant Double Column",
          "description": "Whether to add a new columns with constant double value",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "constantDoubleColName1",
          "value": "",
          "widget": "textfield",
          "title": "Constant Double Column Name",
          "description": "Constant Double Column Name",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "constantDoubleColValue1",
          "value": "",
          "widget": "textfield",
          "title": "Constant Double Column Value",
          "description": "Constant Double Value",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "62",
      "name": "Print Rich Text",
      "description": "Displaying rich text",
      "details": "<h2>Print Rich Text Node Details</h2>\n<br>\nThis node offers a wide variety of common formatting options, such as bold, color and italics.<br>\n<br>\nThe output format also supports options to change font size, font background, text color, text highlight, create Hyperlinks and attach Images as well as create numbered or bulleted lists.<br>\n<br>\n<h4>Input Parameters</h4>\n<ul>\n<li> OUTPUT STORAGE LEVEL : Keep this as DEFAULT.</li>\n<li> TEXT: Select the text you want to format using the format toolbar.</li>\n</ul>\n<h4> This node can be used in various ways to:</h4>\n- Add enriched comments or notes.<br>\n- Add a reference or hyperlink.<br>\n- Add images and videos.<br>",
      "examples": "<h2> Print Rich Text Node Example</h2>\n<br>\nScenario:<br>\n<br>\nLet's say you want to generate a formatted report with a mix of text, numbers, and images. You can use the Print Rich Text node to create a visually appealing and informative report.<br>\n<br>\nConfiguration:<br>\n<br>\n1. Text: Enter the text you want to print.<br>\n2. Formatting: Use the formatting options (bold, italic, underline, font size, color) to style the text.It also supports variables and parameters<br>\n<br>\nOutput:<br>\n<br>\nThe node will print the formatted text to the console or a specified output file. You can customize the formatting and content of the text to create a variety of reports.<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.graph.NodePrintRichText",
      "x": "740.783px",
      "y": "154.783px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "text",
          "value": "<p><strong class=\"ql-size-huge\" style=\"color: rgb(0, 138, 0);\">           Running H2O Distributed Random Forest for Model Training</strong></p>",
          "widget": "textarea_rich",
          "title": "Text",
          "description": "Displaying rich text",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "column",
          "value": "",
          "widget": "variable",
          "title": "Column to pick data",
          "description": "First row from the column will be picked and displayed.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "63",
      "name": "Print Rich Text",
      "description": "Displaying rich text",
      "details": "<h2>Print Rich Text Node Details</h2>\n<br>\nThis node offers a wide variety of common formatting options, such as bold, color and italics.<br>\n<br>\nThe output format also supports options to change font size, font background, text color, text highlight, create Hyperlinks and attach Images as well as create numbered or bulleted lists.<br>\n<br>\n<h4>Input Parameters</h4>\n<ul>\n<li> OUTPUT STORAGE LEVEL : Keep this as DEFAULT.</li>\n<li> TEXT: Select the text you want to format using the format toolbar.</li>\n</ul>\n<h4> This node can be used in various ways to:</h4>\n- Add enriched comments or notes.<br>\n- Add a reference or hyperlink.<br>\n- Add images and videos.<br>",
      "examples": "<h2> Print Rich Text Node Example</h2>\n<br>\nScenario:<br>\n<br>\nLet's say you want to generate a formatted report with a mix of text, numbers, and images. You can use the Print Rich Text node to create a visually appealing and informative report.<br>\n<br>\nConfiguration:<br>\n<br>\n1. Text: Enter the text you want to print.<br>\n2. Formatting: Use the formatting options (bold, italic, underline, font size, color) to style the text.It also supports variables and parameters<br>\n<br>\nOutput:<br>\n<br>\nThe node will print the formatted text to the console or a specified output file. You can customize the formatting and content of the text to create a variety of reports.<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.graph.NodePrintRichText",
      "x": "769.55px",
      "y": "418.55px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "text",
          "value": "<p><strong class=\"ql-size-huge\" style=\"color: rgb(0, 138, 0);\"> Running H2O GBM for Model Training</strong></p>",
          "widget": "textarea_rich",
          "title": "Text",
          "description": "Displaying rich text",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "column",
          "value": "",
          "widget": "variable",
          "title": "Column to pick data",
          "description": "First row from the column will be picked and displayed.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "65",
      "name": "Print N Rows",
      "description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",
      "details": "<h2>Print N Rows Node Details</h2>\n<br>\nThis node is used to print the first N rows from the incoming dataframe.<br>\n<br>\nThe Number of rows that needs to be printed can be configured in the node.<br>\n<br>\n<h4>Input Parameters</h4>\n<ul>\n<li> OUTPUT STORAGE LEVEL : Keep this as DEFAULT.</li>\n<li> TITLE : Enter a short description for the type of information being displayed.</li>\n<li> NUM ROWS TO PRINT : Set an integer value(N) which controls the number of rows to be displayed(Default N=10).</li>\n<li> DISPLAY DATA TYPE : Shows the output dataframe column datatypes by default.</li>\n</ul>\n<h4>Output</h4>\n<ul>\n<li> This node can be used to view, analyze and validate the output of the Dataframe.</li>\n</ul>",
      "examples": "when input 5 in no of rows,it will show first 5 rows of the table as follows<br>\n<br>\nPartID\tSupplierID\tPartName\t<br>\n<br>\nP9271\t  S798\t    Part_D\t<br>\nP523\t  S955\t    Part_K\t<br>\nP3201\t  S332\t    Part_M\t<br>\nP9634\t  S527\t    Part_G\t<br>\nP9345\t  S850\t    Part_M<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",
      "x": "1442.78px",
      "y": "15.3px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "title",
          "value": "H2O ML - Distributed Random Forest Classifier - Prediction values",
          "widget": "textfield",
          "title": "Title",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "n",
          "value": "1000",
          "widget": "textfield",
          "title": "Num Rows to Print",
          "description": "number of rows to be printed",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "displayDataType",
          "value": "true",
          "widget": "array",
          "title": "Display Data Type",
          "description": "If true display rows DataType",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "66",
      "name": "Drop Columns",
      "iconImage": "fa fa-tumblr-square",
      "description": "This node creates a new DataFrame by dropping the specified columns",
      "details": "<h2>Drop Columns Node Details</h2>\n<br>\nThis node creates a new DataFrame by dropping the selected columns.<br>\n<br>\nIt drops the selected columns from the outgoing dataframe. <br>\n<br>\nColumns that need to be dropped are to be selected in the 'Selected' list. Multiple columns can be selected in the list that needs to be dropped.<br>",
      "examples": "<h2>Drop Columns Node Examples</h2>\n<br>\n<h4>Incoming Dataframe</h4>\n<br>\nIn this example we have considered an Incoming Dataframe having following columns:<br>\n<br>\n<ul>\n<li> CUST_CD</li>\n<li> CUST_NAME</li>\n<li> DOB</li>\n<li> ADDRESS</li>\n</ul>\n<h4>Drop Columns Node Configuration And Output</h4>\n<br>\n[DOB] and [ADDRESS] columns are selected to be dropped from the outgoing Dataframe. <br>\nOutgoing dataframe would contain only below two columns after dropping the selected columns:<br>\n<br>\n<ul>\n<li> DOB</li>\n<li> ADDRESS</li>\n</ul>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeDropColumns",
      "x": "1254.54px",
      "y": "261.538px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "dropCols",
          "value": "[\"probability\"]",
          "widget": "variables",
          "title": "Columns",
          "description": "The columns to be excluded from the output DataFrame",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "67",
      "name": "Select Columns",
      "iconImage": "fa fa-tumblr-square",
      "description": "This node creates a new DataFrame that contains only the selected columns",
      "details": "<h2>Select Columns Node Details</h2>\n<br>\nThis node creates a new DataFrame containing only the selected columns.<br>\n<br>\nIt selects columns that need to be passed to the outgoing Dataframe. <br>\n<br>\nColumns that need to be included in the outgoing Dataframe are to be selected in the 'Selected' list. Multiple columns can be selected in the list.<br>",
      "examples": "<h2>Select Columns Node Examples</h2>\n<br>\n<h4>Incoming Dataframe</h4>\n<br>\nIn this example we have considered an Incoming Dataframe with following rows:<br>\n<br>\nCUST_CD    |    CUST_NAME    |    AGE    |    DATE_OF_JOINING    |    SALARY<br>\n-------------------------------------------------------------------------------------<br>\nC01        |    MATT         |    50     |    12-02-2002         |    USD 200000.00<br>\nC02        |    LISA         |    45     |    15-11-2020         |    GBP 100000.00<br>\nC03        |    ROBIN        |    30     |    10-10-2015         |    EUR 15000.00<br>\nC04        |    MARCUS       |    35     |    01-01-2021         |    AUD 350000.00<br>\n<br>\n<h4>Select Columns Node Configuration And Output</h4>\n<br>\n[CUST_CD], [CUST_NAME] and [SALARY] columns from the incoming Dataframe are selected to be part of the outgoing Dataframe.<br>\nOutgoing Dataframe would be created as below containing only the selected columns:<br>\n<br>\nCUST_CD    |    CUST_NAME    |    SALARY<br>\n-------------------------------------------------<br>\nC01        |    MATT         |    USD 200000.00<br>\nC02        |    LISA         |    GBP 100000.00<br>\nC03        |    ROBIN        |    EUR 15000.00<br>\nC04        |    MARCUS       |    AUD 350000.00<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeColumnFilter",
      "x": "1392.75px",
      "y": "205.75px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "outputCols",
          "value": "[\"CUSTOMER_ID\",\"SECTOR\",\"CATEGORY\",\"SUBCATEGPRY\",\"INV_DATE_month\",\"Actuals\",\"prediction\"]",
          "widget": "variables",
          "title": "Columns",
          "description": "Columns to be included in the output DataFrame",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "68",
      "name": "Sort By",
      "description": "It sorts the incoming DataFrame on the fields specified.",
      "details": "This node sorts the incoming DataFrame based on the values present in columns specified.<br>\n<br>\nMultiple columns can be selected for sorting data. Data can be sorted in Ascending or Descending order.<br>",
      "examples": "Incoming Dataframe has following rows:<br>\n<br>\nCUST_CD    |    CUST_NAME    |    AGE    |    DATE_OF_JOINING    |    SALARY<br>\n-------------------------------------------------------------------------------------<br>\nC01        |    MATT         |    50     |    12-02-2002         |    USD 200000.00<br>\nC02        |    LISA         |    45     |    15-11-2020         |    GBP 100000.00<br>\nC03        |    ROBIN        |    30     |    10-10-2015         |    EUR 15000.00<br>\nC04        |    MARCUS       |    35     |    01-01-2021         |    AUD 350000.00<br>\n<br>\nIf SortBy node is configured to sort data in descending order of values present in [CUST_NAME] column then outgoing Dataframe would be created as below:<br>\n<br>\nCUST_CD    |    CUST_NAME    |    AGE    |    DATE_OF_JOINING    |    SALARY<br>\n-------------------------------------------------------------------------------------<br>\nC03        |    ROBIN        |    30     |    10-10-2015         |    EUR 15000.00<br>\nC01        |    MATT         |    50     |    12-02-2002         |    USD 200000.00<br>\nC04        |    MARCUS       |    35     |    01-01-2021         |    AUD 350000.00<br>\nC02        |    LISA         |    45     |    15-11-2020         |    GBP 100000.00<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeSortBy",
      "x": "1399.15px",
      "y": "51.3437px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "sortByColNames",
          "value": "[\"CUSTOMER_ID\",\"SECTOR\",\"CATEGORY\",\"SUBCATEGPRY\",\"INV_DATE_month\"]",
          "widget": "variables_list_select",
          "title": "Columns",
          "description": "Columns on which to Sort By",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ascDesc",
          "value": "[\"ASC\",\"ASC\",\"ASC\",\"ASC\",\"ASC\"]",
          "widget": "variables_list_array",
          "title": "Sorting Order",
          "description": "Whether to sort in ascending or descending order",
          "optionsArray": [
            "DESC",
            "ASC"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "69",
      "name": "Print N Rows",
      "description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",
      "details": "<h2>Print N Rows Node Details</h2>\n<br>\nThis node is used to print the first N rows from the incoming dataframe.<br>\n<br>\nThe Number of rows that needs to be printed can be configured in the node.<br>\n<br>\n<h4>Input Parameters</h4>\n<ul>\n<li> OUTPUT STORAGE LEVEL : Keep this as DEFAULT.</li>\n<li> TITLE : Enter a short description for the type of information being displayed.</li>\n<li> NUM ROWS TO PRINT : Set an integer value(N) which controls the number of rows to be displayed(Default N=10).</li>\n<li> DISPLAY DATA TYPE : Shows the output dataframe column datatypes by default.</li>\n</ul>\n<h4>Output</h4>\n<ul>\n<li> This node can be used to view, analyze and validate the output of the Dataframe.</li>\n</ul>",
      "examples": "when input 5 in no of rows,it will show first 5 rows of the table as follows<br>\n<br>\nPartID\tSupplierID\tPartName\t<br>\n<br>\nP9271\t  S798\t    Part_D\t<br>\nP523\t  S955\t    Part_K\t<br>\nP3201\t  S332\t    Part_M\t<br>\nP9634\t  S527\t    Part_G\t<br>\nP9345\t  S850\t    Part_M<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",
      "x": "1751.13px",
      "y": "424.725px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "title",
          "value": "H2O ML - Gradient Boosting Machine - Prediction values",
          "widget": "textfield",
          "title": "Title",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "n",
          "value": "1000",
          "widget": "textfield",
          "title": "Num Rows to Print",
          "description": "number of rows to be printed",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "displayDataType",
          "value": "true",
          "widget": "array",
          "title": "Display Data Type",
          "description": "If true display rows DataType",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "70",
      "name": "Drop Columns",
      "iconImage": "fa fa-tumblr-square",
      "description": "This node creates a new DataFrame by dropping the specified columns",
      "details": "<h2>Drop Columns Node Details</h2>\n<br>\nThis node creates a new DataFrame by dropping the selected columns.<br>\n<br>\nIt drops the selected columns from the outgoing dataframe. <br>\n<br>\nColumns that need to be dropped are to be selected in the 'Selected' list. Multiple columns can be selected in the list that needs to be dropped.<br>",
      "examples": "<h2>Drop Columns Node Examples</h2>\n<br>\n<h4>Incoming Dataframe</h4>\n<br>\nIn this example we have considered an Incoming Dataframe having following columns:<br>\n<br>\n<ul>\n<li> CUST_CD</li>\n<li> CUST_NAME</li>\n<li> DOB</li>\n<li> ADDRESS</li>\n</ul>\n<h4>Drop Columns Node Configuration And Output</h4>\n<br>\n[DOB] and [ADDRESS] columns are selected to be dropped from the outgoing Dataframe. <br>\nOutgoing dataframe would contain only below two columns after dropping the selected columns:<br>\n<br>\n<ul>\n<li> DOB</li>\n<li> ADDRESS</li>\n</ul>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeDropColumns",
      "x": "1233.74px",
      "y": "559.737px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "dropCols",
          "value": "[\"probability\"]",
          "widget": "variables",
          "title": "Columns",
          "description": "The columns to be excluded from the output DataFrame",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "71",
      "name": "Select Columns",
      "iconImage": "fa fa-tumblr-square",
      "description": "This node creates a new DataFrame that contains only the selected columns",
      "details": "<h2>Select Columns Node Details</h2>\n<br>\nThis node creates a new DataFrame containing only the selected columns.<br>\n<br>\nIt selects columns that need to be passed to the outgoing Dataframe. <br>\n<br>\nColumns that need to be included in the outgoing Dataframe are to be selected in the 'Selected' list. Multiple columns can be selected in the list.<br>",
      "examples": "<h2>Select Columns Node Examples</h2>\n<br>\n<h4>Incoming Dataframe</h4>\n<br>\nIn this example we have considered an Incoming Dataframe with following rows:<br>\n<br>\nCUST_CD    |    CUST_NAME    |    AGE    |    DATE_OF_JOINING    |    SALARY<br>\n-------------------------------------------------------------------------------------<br>\nC01        |    MATT         |    50     |    12-02-2002         |    USD 200000.00<br>\nC02        |    LISA         |    45     |    15-11-2020         |    GBP 100000.00<br>\nC03        |    ROBIN        |    30     |    10-10-2015         |    EUR 15000.00<br>\nC04        |    MARCUS       |    35     |    01-01-2021         |    AUD 350000.00<br>\n<br>\n<h4>Select Columns Node Configuration And Output</h4>\n<br>\n[CUST_CD], [CUST_NAME] and [SALARY] columns from the incoming Dataframe are selected to be part of the outgoing Dataframe.<br>\nOutgoing Dataframe would be created as below containing only the selected columns:<br>\n<br>\nCUST_CD    |    CUST_NAME    |    SALARY<br>\n-------------------------------------------------<br>\nC01        |    MATT         |    USD 200000.00<br>\nC02        |    LISA         |    GBP 100000.00<br>\nC03        |    ROBIN        |    EUR 15000.00<br>\nC04        |    MARCUS       |    AUD 350000.00<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeColumnFilter",
      "x": "1451.95px",
      "y": "560.925px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "outputCols",
          "value": "[\"CUSTOMER_ID\",\"SECTOR\",\"CATEGORY\",\"SUBCATEGPRY\",\"INV_DATE_month\",\"Actuals\",\"prediction\"]",
          "widget": "variables",
          "title": "Columns",
          "description": "Columns to be included in the output DataFrame",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "72",
      "name": "Sort By",
      "description": "It sorts the incoming DataFrame on the fields specified.",
      "details": "This node sorts the incoming DataFrame based on the values present in columns specified.<br>\n<br>\nMultiple columns can be selected for sorting data. Data can be sorted in Ascending or Descending order.<br>",
      "examples": "Incoming Dataframe has following rows:<br>\n<br>\nCUST_CD    |    CUST_NAME    |    AGE    |    DATE_OF_JOINING    |    SALARY<br>\n-------------------------------------------------------------------------------------<br>\nC01        |    MATT         |    50     |    12-02-2002         |    USD 200000.00<br>\nC02        |    LISA         |    45     |    15-11-2020         |    GBP 100000.00<br>\nC03        |    ROBIN        |    30     |    10-10-2015         |    EUR 15000.00<br>\nC04        |    MARCUS       |    35     |    01-01-2021         |    AUD 350000.00<br>\n<br>\nIf SortBy node is configured to sort data in descending order of values present in [CUST_NAME] column then outgoing Dataframe would be created as below:<br>\n<br>\nCUST_CD    |    CUST_NAME    |    AGE    |    DATE_OF_JOINING    |    SALARY<br>\n-------------------------------------------------------------------------------------<br>\nC03        |    ROBIN        |    30     |    10-10-2015         |    EUR 15000.00<br>\nC01        |    MATT         |    50     |    12-02-2002         |    USD 200000.00<br>\nC04        |    MARCUS       |    35     |    01-01-2021         |    AUD 350000.00<br>\nC02        |    LISA         |    45     |    15-11-2020         |    GBP 100000.00<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeSortBy",
      "x": "1558.7px",
      "y": "451.925px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "sortByColNames",
          "value": "[\"CUSTOMER_ID\",\"SECTOR\",\"CATEGORY\",\"SUBCATEGPRY\",\"INV_DATE_month\"]",
          "widget": "variables_list_select",
          "title": "Columns",
          "description": "Columns on which to Sort By",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "ascDesc",
          "value": "[\"ASC\",\"ASC\",\"ASC\",\"ASC\",\"ASC\"]",
          "widget": "variables_list_array",
          "title": "Sorting Order",
          "description": "Whether to sort in ascending or descending order",
          "optionsArray": [
            "DESC",
            "ASC"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "91",
      "name": "Save CSV",
      "iconImage": "/images/icons/node-icon/csv.svg",
      "description": "Saves the DataFrame into the specified location in CSV Format",
      "details": "This node saves incoming Dataframe into the specified location in CSV format.<br>",
      "examples": "path-folder1/folder2/filename<br>\n<br>\nthe file will be saved under the file name at the path provided<br>\nif folder is not present it will be created and save the file<br>\nif the file already exists selection in save mode determines what happens to the file,append-adds the file data to it overwrite-replaces the file altogether<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.save.NodeSaveCSV",
      "x": "1370.6px",
      "y": "381.6px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "path",
          "value": "data/CPG/CPG-Churn-Prediction-B2B/Processed-Data/Training-Report-Data",
          "widget": "textfield",
          "title": "Path",
          "description": "Path where to save the CSV files",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "saveMode",
          "value": "Overwrite",
          "widget": "array",
          "title": "Save Mode",
          "description": "Whether to Append, Overwrite or Error if the path Exists",
          "optionsArray": [
            "Append",
            "Overwrite",
            "ErrorIfExists",
            "Ignore"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "header",
          "value": "true",
          "widget": "array",
          "title": "Header",
          "description": "Should a Header Row be saved with each File?",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "encoding",
          "value": "UTF-8",
          "widget": "textfield",
          "title": "Encoding",
          "description": "Decodes the CSV files by the given encoding type",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "quote",
          "value": "\"",
          "widget": "textfield",
          "title": "Quote",
          "description": "Sets a single character used for escaping quoted values where the separator can be part of the value",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "escape",
          "value": "\\",
          "widget": "textfield",
          "title": "Escape",
          "description": "Sets a single character used for escaping quotes inside an already quoted value.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "advanced",
          "value": "",
          "widget": "tab",
          "title": "Advanced",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "partitionColNames",
          "value": "[]",
          "widget": "variables",
          "title": "Partition Column Names",
          "description": "Partition Column Names",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "enableDownloadLink",
          "value": "false",
          "widget": "array_single",
          "title": "Enable Download Link",
          "description": "Generate download links for the saved CSV files",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "fileName",
          "value": "",
          "widget": "textfield",
          "wdgtCommon": "enableDownloadLink",
          "title": "File Name To Download",
          "description": "Enter the FileName",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": "true"
        },
        {
          "name": "saveAsOneFile",
          "value": "false",
          "widget": "array",
          "title": "Save as One File",
          "description": "Save the output as a single CSV file using coalesce",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "92",
      "name": "Save CSV",
      "iconImage": "/images/icons/node-icon/csv.svg",
      "description": "Saves the DataFrame into the specified location in CSV Format",
      "details": "This node saves incoming Dataframe into the specified location in CSV format.<br>",
      "examples": "path-folder1/folder2/filename<br>\n<br>\nthe file will be saved under the file name at the path provided<br>\nif folder is not present it will be created and save the file<br>\nif the file already exists selection in save mode determines what happens to the file,append-adds the file data to it overwrite-replaces the file altogether<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.save.NodeSaveCSV",
      "x": "1424.6px",
      "y": "744.6px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "path",
          "value": "data/CPG/CPG-Churn-Prediction-B2B/Processed-Data/Training-Report-Data",
          "widget": "textfield",
          "title": "Path",
          "description": "Path where to save the CSV files",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "saveMode",
          "value": "Overwrite",
          "widget": "array",
          "title": "Save Mode",
          "description": "Whether to Append, Overwrite or Error if the path Exists",
          "optionsArray": [
            "Append",
            "Overwrite",
            "ErrorIfExists",
            "Ignore"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "header",
          "value": "true",
          "widget": "array",
          "title": "Header",
          "description": "Should a Header Row be saved with each File?",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "encoding",
          "value": "UTF-8",
          "widget": "textfield",
          "title": "Encoding",
          "description": "Decodes the CSV files by the given encoding type",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "quote",
          "value": "\"",
          "widget": "textfield",
          "title": "Quote",
          "description": "Sets a single character used for escaping quoted values where the separator can be part of the value",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "escape",
          "value": "\\",
          "widget": "textfield",
          "title": "Escape",
          "description": "Sets a single character used for escaping quotes inside an already quoted value.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "advanced",
          "value": "",
          "widget": "tab",
          "title": "Advanced",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "partitionColNames",
          "value": "[]",
          "widget": "variables",
          "title": "Partition Column Names",
          "description": "Partition Column Names",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "enableDownloadLink",
          "value": "false",
          "widget": "array_single",
          "title": "Enable Download Link",
          "description": "Generate download links for the saved CSV files",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "fileName",
          "value": "",
          "widget": "textfield",
          "wdgtCommon": "enableDownloadLink",
          "title": "File Name To Download",
          "description": "Enter the FileName",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": "true"
        },
        {
          "name": "saveAsOneFile",
          "value": "false",
          "widget": "array",
          "title": "Save as One File",
          "description": "Save the output as a single CSV file using coalesce",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "disabled": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    }
  ],
  "edges": [
    {
      "source": "2",
      "target": "8",
      "id": 1
    },
    {
      "source": "8",
      "target": "3",
      "id": 2
    },
    {
      "source": "35",
      "target": "32",
      "id": 3
    },
    {
      "source": "32",
      "target": "36",
      "id": 4
    },
    {
      "source": "35",
      "target": "36",
      "id": 5
    },
    {
      "source": "45",
      "target": "46",
      "id": 6
    },
    {
      "source": "47",
      "target": "48",
      "id": 7
    },
    {
      "source": "47",
      "target": "51",
      "id": 8
    },
    {
      "source": "51",
      "target": "48",
      "id": 9
    },
    {
      "source": "32",
      "target": "56",
      "id": 10
    },
    {
      "source": "51",
      "target": "58",
      "id": 11
    },
    {
      "source": "3",
      "target": "61",
      "id": 12
    },
    {
      "source": "34",
      "target": "62",
      "id": 13
    },
    {
      "source": "62",
      "target": "35",
      "id": 14
    },
    {
      "source": "46",
      "target": "63",
      "id": 15
    },
    {
      "source": "63",
      "target": "47",
      "id": 16
    },
    {
      "source": "33",
      "target": "34",
      "id": 17
    },
    {
      "source": "61",
      "target": "33",
      "id": 18
    },
    {
      "source": "61",
      "target": "45",
      "id": 19
    },
    {
      "source": "66",
      "target": "67",
      "id": 20
    },
    {
      "source": "67",
      "target": "68",
      "id": 21
    },
    {
      "source": "68",
      "target": "65",
      "id": 22
    },
    {
      "source": "36",
      "target": "66",
      "id": 23
    },
    {
      "source": "70",
      "target": "71",
      "id": 24
    },
    {
      "source": "71",
      "target": "72",
      "id": 25
    },
    {
      "source": "72",
      "target": "69",
      "id": 26
    },
    {
      "source": "48",
      "target": "70",
      "id": 27
    },
    {
      "source": "67",
      "target": "91",
      "id": 44
    },
    {
      "source": "71",
      "target": "92",
      "id": 45
    }
  ],
  "dataSetDetails": [],
  "engine": "scala"
}