{
  "name": "Serper-API-Search",
  "uuid": "adc15ee4-f75b-4d7f-8d12-654205f1d6e2",
  "category": "LLM",
  "nodes": [
    {
      "id": "2",
      "name": "Print N Rows",
      "iconImage": "/images/icons/node-icon/print_n_rows.svg",
      "description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",
      "details": "<h2>Print N Rows Node Details</h2>\n<br>\nThis node is used to print the first N rows from the incoming dataframe.<br>\n<br>\nThe Number of rows that needs to be printed can be configured in the node.<br>\n<br>\n<h4>Input Parameters</h4>\n<ul>\n<li> OUTPUT STORAGE LEVEL : Keep this as DEFAULT.</li>\n<li> TITLE : Enter a short description for the type of information being displayed.</li>\n<li> NUM ROWS TO PRINT : Set an integer value(N) which controls the number of rows to be displayed(Default N=10).</li>\n<li> DISPLAY DATA TYPE : Shows the output dataframe column datatypes by default.</li>\n</ul>\n<h4>Output</h4>\n<ul>\n<li> This node can be used to view, analyze and validate the output of the Dataframe.</li>\n</ul>",
      "examples": "when input 5 in no of rows,it will show first 5 rows of the table as follows<br>\n<br>\nPartID\tSupplierID\tPartName\t<br>\n<br>\nP9271\t  S798\t    Part_D\t<br>\nP523\t  S955\t    Part_K\t<br>\nP3201\t  S332\t    Part_M\t<br>\nP9634\t  S527\t    Part_G\t<br>\nP9345\t  S850\t    Part_M<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",
      "x": "887.901px",
      "y": "115.898px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "title",
          "value": "Row Values",
          "widget": "textfield",
          "title": "Title",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "n",
          "value": "50",
          "widget": "textfield",
          "title": "Num Rows to Print",
          "description": "number of rows to be printed",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "displayDataType",
          "value": "true",
          "widget": "array",
          "title": "Display Data Type",
          "description": "If true display rows DataType",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "3",
      "name": "SerperAI Search",
      "iconImage": "/images/icons/node-icon/Graph_group_by_column.svg",
      "description": "The SerperAI Search node fetches real-time search results from Google services (Web, News, Images, Shopping, Places) using the SerperAI API. It processes user queries and returns results as a structured DataFrame or raw JSON, ideal for retrieval-augmented generation (RAG) workflows.",
      "details": "<h2> SerperAI Search Node Details</h2>\nThe SerperAI Search node fetches real-time search results from Google services (Web, News, Images, Shopping, Places) using the SerperAI API. It processes user queries and returns results as a structured DataFrame or raw JSON, ideal for retrieval-augmented generation (RAG) workflows.<br>\n<br>\n<h3> General:</h3>\n<br>\n<h4> API Key:</h4>\nSpecifies the SerperAI API key obtained from serper.ai. This field is required to authenticate requests to the SerperAI API.<br>\n<br>\n<h4> Query:</h4>\nDefines the search query to send to the SerperAI API (e.g., 'latest AI tools'). This is required unless a *User Query Column* is specified.<br>\n<br>\n<h4> User Query Column:</h4>\nSpecifies a DataFrame column containing search queries. This is optional and used when queries are stored in an input DataFrame column instead of the *Query* field.<br>\n<br>\n<h4> Search Type:</h4>\nSelects the type of search to perform. Options include:<br>\n- search: Standard web search results.<br>\n- news: News articles related to the query.<br>\n- images: Image search results.<br>\n- shopping: Product listings from shopping searches.<br>\n- places: Local business or place information.<br>\n- autocomplete: Search query suggestions.<br>\n- webpage: Webpage-specific search results (treated as standard search).<br>\nIf not specified, defaults to *search*.<br>\n<br>\n<h4> Number of Results:</h4>\nSets the number of search results to fetch. Default is 10. Must be a positive integer.<br>\n<br>\n<h4> Country Code (gl):</h4>\nSpecifies a two-letter country code (e.g., 'us' for United States, 'in' for India) to localize search results. Optional.<br>\n<br>\n<h4> Language Code (hl):</h4>\nSpecifies a two-letter language code (e.g., 'en' for English, 'fr' for French) to return results in a specific language. Optional.<br>\n<br>\n<h4> Date Range Filter:</h4>\nRestricts search results to a specific time range. Options are:<br>\n- Any Time: No time restriction (default).<br>\n- Past Hour: Results from the last hour.<br>\n- Past 24 Hours: Results from the last day.<br>\n- Past Week: Results from the last week.<br>\n- Past Month: Results from the last month.<br>\n- Past Year: Results from the last year.<br>\n<br>\n<h4> Additional Parameters:</h4>\nAllows advanced search parameters as a JSON object (e.g., {\"gl\": \"us\", \"hl\": \"en\"}). Optional and overrides *Country Code* and *Language Code* if provided.<br>\n<br>\n<h4> Output Format:</h4>\nDetermines the output format of the search results. Options are:<br>\n- Parsed DataFrame: Structured columns specific to the search type (e.g., title, link, snippet for web search).<br>\n- Raw JSON: Full API response as a JSON string.<br>\nDefaults to *Parsed DataFrame*.<br>\n<br>\n<h3> Input:</h3>\nNo input DataFrame is required unless *User Query Column* is used, in which case an input DataFrame with the specified query column is needed.<br>\n<br>\n<h3> Output:</h3>\nThe node outputs a DataFrame with columns depending on the *Search Type* and *Output Format*:<br>\n- For *Parsed DataFrame*:<br>\n- Web search: title, link, snippet, query.<br>\n- News: title, link, source, date, query.<br>\n- Images: title, imageUrl, source, query.<br>\n- Shopping: title, link, price, query.<br>\n- Places: title, address, rating (float), query.<br>\n- Autocomplete: suggestion, query.<br>\n- For *Raw JSON*: search_results (JSON string), query.<br>",
      "examples": "<h2> Example: SerperAI Search Node</h2>\n<br>\n<h3> Input:</h3>\nThe SerperAI Search node is configured as follows:<br>\n- API Key: abc123xyz (valid SerperAI API key).<br>\n- Query: \"latest AI tools 2025\".<br>\n- User Query Column: Empty (uses *Query* field).<br>\n- Search Type: search (web search).<br>\n- Number of Results: 5.<br>\n- Country Code (gl): us.<br>\n- Language Code (hl): en.<br>\n- Date Range Filter: Past Month.<br>\n- Additional Parameters: {} (empty).<br>\n- Output Format: Parsed DataFrame.<br>\n<br>\nNo input DataFrame is provided since *User Query Column* is empty.<br>\n<br>\n<h3> Output:</h3>\nThe node processes the query and produces a DataFrame with the following structure:<br>\n<br>\ntitle                          | link                                      | snippet                                   | query<br>\n-------------------------------|-------------------------------------------|-------------------------------------------|--------------------<br>\nTop AI Tools for 2025          | <a href=\"https://example.com/ai-tools-2025\" target=\"_blank\">example.com/ai-tools-2025</a>         | Best AI tools for productivity...         | latest AI tools 2025<br>\nAI Innovations in 2025         | <a href=\"https://techsite.com/ai-2025\" target=\"_blank\">techsite.com/ai-2025</a>              | Discover the latest AI advancements...    | latest AI tools 2025<br>\n2025 AI Software Guide         | <a href=\"https://reviews.com/ai-guide\" target=\"_blank\">reviews.com/ai-guide</a>              | Comprehensive guide to AI tools...       | latest AI tools 2025<br>\nNew AI Tools Released          | <a href=\"https://news.com/ai-releases\" target=\"_blank\">news.com/ai-releases</a>             | Latest AI tool announcements...          | latest AI tools 2025<br>\nAI Trends for 2025             | <a href=\"https://insights.com/ai-trends\" target=\"_blank\">insights.com/ai-trends</a>           | Emerging AI technologies for 2025...     | latest AI tools 2025<br>\n<br>\n<h3> Explanation:</h3>\n- The node sends the query \"latest AI tools 2025\" to the SerperAI API with the *search* type, requesting 5 results.<br>\n- The *Country Code (gl)* is set to 'us' and *Language Code (hl)* to 'en', localizing results to the United States in English.<br>\n- The *Date Range Filter* is set to *Past Month*, restricting results to content from the last 30 days.<br>\n- Since *Output Format* is *Parsed DataFrame*, the results are structured into columns: *title*, *link*, *snippet*, and *query*.<br>\n- Each row corresponds to a search result, with the *query* column reflecting the input query.<br>\n- If *Output Format* were *Raw JSON*, the output would include a *search_results* column with the full JSON response and a *query* column.<br>\n- The API key authenticates the request, and no input DataFrame is needed since *User Query Column* is empty.<br>",
      "type": "pyspark",
      "nodeClass": "fire.nodes.gai.NodeSerperAISearch",
      "x": "141.898px",
      "y": "416.901px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "serperConnection",
          "value": "169",
          "widget": "object_array",
          "title": "Select Connection",
          "description": "The serper api connection to connect",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "query",
          "value": "IIT Bombay",
          "widget": "textareafield",
          "title": "Query",
          "description": "Search query to send to the SerperAI API (e.g., 'latest AI tools').",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "userQueryCol",
          "value": "",
          "widget": "variable",
          "title": "User Query Column",
          "description": "Column name for user query, (if the query is in a column)",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "Advanced",
          "value": "",
          "widget": "tab",
          "title": "Advanced",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "search_type",
          "value": "webpage",
          "widget": "array",
          "title": "Search Type",
          "description": "Type of search to perform: web, news, images, shopping, places, youtube, scholar, patents, autocomplete, etc.",
          "optionsArray": [
            "search",
            "news",
            "images",
            "shopping",
            "places",
            "autocomplete",
            "webpage"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "num_results",
          "value": "8",
          "widget": "textfield",
          "title": "Number of Results",
          "description": "Number of search results to fetch (default: 10).",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "country",
          "value": "",
          "widget": "textfield",
          "title": "Country Code (gl)",
          "description": "Two-letter country code (e.g., 'us' for United States, 'in' for India). Used to localize results.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "language",
          "value": "",
          "widget": "textfield",
          "title": "Language Code (hl)",
          "description": "Two-letter language code (e.g., 'en' for English, 'fr' for French). Used to return results in a specific language.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "date_range",
          "value": "y1",
          "widget": "enum",
          "title": "Date Range Filter",
          "description": "Restrict search results to a specific time range.",
          "optionsMap": {
            "": "Any Time",
            "h1": "Past Hour",
            "d1": "Past 24 Hours",
            "w1": "Past Week",
            "m1": "Past Month",
            "y1": "Past Year"
          },
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "additional_params",
          "value": "",
          "widget": "textareafield",
          "title": "Additional Parameters",
          "description": "Optional JSON object for advanced search parameters (e.g., {\"gl\": \"us\", \"hl\": \"en\"}).",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "output_format",
          "value": "Parsed DataFrame",
          "widget": "array",
          "title": "Output Format",
          "description": "Output format: Parsed DataFrame (structured columns) or Raw JSON (full response).",
          "optionsArray": [
            "Parsed DataFrame",
            "Raw JSON"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "pyspark"
    },
    {
      "id": "5",
      "name": "Sticky Note",
      "iconImage": "fa fa-file-text",
      "description": "Allows capturing Notes on the Workflow",
      "details": "",
      "examples": "",
      "type": "sticky",
      "nodeClass": "fire.nodes.doc.NodeStickyNote",
      "x": "405px",
      "y": "382px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "bgColor",
          "value": "yellow",
          "widget": "textfield",
          "title": "Bg Color",
          "description": "Background of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "width",
          "value": "743px",
          "widget": "textfield",
          "title": "Width",
          "description": "Width of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "height",
          "value": "273px",
          "widget": "textfield",
          "title": "Height",
          "description": "Height of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "comment",
          "value": "<p><strong>Description</strong>: Fetches real-time Google search results via SerperAI API, outputting as a DataFrame or raw JSON.</p><p><strong>Key Options</strong>:</p><ul><li><strong>API Key</strong>: Enter SerperAI API key for authentication (from serper.ai).</li><li><strong>Query</strong>: Define search query (e.g., \"latest AI tools\") or use a column via <strong>User Query Column</strong>.</li><li><strong>Search Type</strong>: Choose from web, news, images, shopping, places, autocomplete, webpage (default: search).</li><li><strong>Number of Results</strong>: Set result count (default: 10).</li><li><strong>Country Code (gl)</strong>: Localize results with two-letter code (e.g., \"us\", \"in\").</li><li><strong>Language Code (hl)</strong>: Set result language (e.g., \"en\", \"fr\").</li><li><strong>Date Range Filter</strong>: Restrict results by time (e.g., Past Hour, Past Week, Any Time).</li><li><strong>Additional Parameters</strong>: Optional JSON for advanced settings (e.g., {\"gl\": \"us\"}).</li><li><strong>Output Format</strong>: Select Parsed DataFrame (structured) or Raw JSON (full response).</li><li><strong>Notes</strong>: No input DataFrame required; outputs structured or raw search data for downstream processing.</li></ul><p><br></p>",
          "widget": "textarea_rich",
          "title": "Comment",
          "description": "Comments for the Workflow",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "6",
      "name": "Sticky Note",
      "iconImage": "fa fa-file-text",
      "description": "Allows capturing Notes on the Workflow",
      "details": "",
      "examples": "",
      "type": "sticky",
      "nodeClass": "fire.nodes.doc.NodeStickyNote",
      "x": "1px",
      "y": "32px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "bgColor",
          "value": "blue",
          "widget": "textfield",
          "title": "Bg Color",
          "description": "Background of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "width",
          "value": "543px",
          "widget": "textfield",
          "title": "Width",
          "description": "Width of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "height",
          "value": "223px",
          "widget": "textfield",
          "title": "Height",
          "description": "Height of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        },
        {
          "name": "comment",
          "value": "<p><strong>Purpose</strong>: Automate real-time search result retrieval from Google services (Web, News, Images, etc.) using the SerperAI API for data-driven applications like RAG workflows.</p><p><strong>Overview</strong>:</p><ul><li>Utilizes the Serper API Search node to fetch and process search results.</li><li>Configurable for various search types and output formats (DataFrame or JSON).</li><li>Ideal for dynamic querying and localized search result extraction.</li><li><strong>Key Action</strong>: Configure API key and query parameters to fetch relevant results efficiently.</li></ul><p><br></p>",
          "widget": "textarea_rich",
          "title": "Comment",
          "description": "Comments for the Workflow",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": "",
          "size": "100%",
          "toggle": ""
        }
      ],
      "engine": "all"
    }
  ],
  "edges": [
    {
      "source": "3",
      "target": "2",
      "id": 1
    }
  ],
  "dataSetDetails": [],
  "engine": "pyspark"
}