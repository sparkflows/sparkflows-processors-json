{
  "name": "Predicting-Sales-Price-Using-Ridge-Rigression-Model",
  "uuid": "b9314e77-e757-48b5-974a-89e27544d9f6",
  "category": "Regression",
  "description": "-",
  "parameters": "-",
  "nodes": [
    {
      "id": "9",
      "name": "Split",
      "description": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data. For example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).",
      "details": "This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data.<br>\n<br>\nFor example, if the fraction is .7, it would split the data into 2 DataFrames, one containing 70% of the rows(passed from lower edge id to next node) and the other containing the remaining 30%(passed from higher edge id to next node).<br>\n<br>\nThe split node can be used for splitting the DataFrame for training and test datasets used in Machine Learning.<br>",
      "examples": "lets say you pass a table with 5 rows and the fraction .6(60%),the first and second outcomes of the node will give dataframes as follows<br>\n<br>\nFirst<br>\nPartID\tSupplierID\tPartName\t<br>\nStringType\tStringType\tStringType\t<br>\nP9271\tS798\tPart_D\t<br>\nP523\tS955\tPart_K\t<br>\nP3201\tS332\tPart_M\t<br>\n<br>\n<br>\nSecond<br>\nPartID\tSupplierID\tPartName\t<br>\nStringType\tStringType\tStringType\t<br>\nP9634\tS527\tPart_G\t<br>\nP9345\tS850\tPart_M<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.ml.NodeSplit",
      "x": "254.191px",
      "y": "269.174px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "fraction1",
          "value": ".8",
          "widget": "textfield",
          "title": "Fraction 1",
          "description": "Fraction to be used for Splitting the DataFrame into two. The first DataFrame would go to the lower edge output. The other would go to the higher edge output.",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "11",
      "name": "SklearnPredict",
      "description": "Predict node takes in a dataframe and model and makes predictions",
      "details": "",
      "examples": "",
      "type": "ml-predict",
      "nodeClass": "fire.nodes.sklearn.NodeSklearnPredict",
      "x": "391.011px",
      "y": "355.005px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "featureCols",
          "value": "[\"Total_Revenue\",\"Total_Profit\"]",
          "widget": "variables",
          "title": "Feature Columns",
          "description": "Feature columns of type - all numeric, boolean and vector",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float",
            "int"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "targetCol",
          "value": "Unit_Cost",
          "widget": "variable",
          "title": "Target Column",
          "description": "The label column for model fitting",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float",
            "int"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "keyCol",
          "value": "Country",
          "widget": "variable",
          "title": "Key Column",
          "description": "The key column to identify the each row/data/sample.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        }
      ],
      "engine": "pyspark"
    },
    {
      "id": "13",
      "name": "PrintNRows",
      "description": "Prints the specified number of records in the DataFrame. It is useful for seeing intermediate output",
      "details": "<h2>Print N Rows Node Details</h2>\n<br>\nThis node is used to print the first N rows from the incoming dataframe.<br>\n<br>\nThe Number of rows that needs to be printed can be configured in the node.<br>\n<br>\n<h4>Input Parameters</h4>\n<ul>\n<li> OUTPUT STORAGE LEVEL : Keep this as DEFAULT.</li>\n<li> TITLE : Enter a short description for the type of information being displayed.</li>\n<li> NUM ROWS TO PRINT : Set an integer value(N) which controls the number of rows to be displayed(Default N=10).</li>\n<li> DISPLAY DATA TYPE : Shows the output dataframe column datatypes by default.</li>\n</ul>\n<h4>Output</h4>\n<ul>\n<li> This node can be used to view, analyze and validate the output of the Dataframe.</li>\n</ul>",
      "examples": "when input 5 in no of rows,it will show first 5 rows of the table as follows<br>\n<br>\nPartID\tSupplierID\tPartName\t<br>\n<br>\nP9271\t  S798\t    Part_D\t<br>\nP523\t  S955\t    Part_K\t<br>\nP3201\t  S332\t    Part_M\t<br>\nP9634\t  S527\t    Part_G\t<br>\nP9345\t  S850\t    Part_M<br>",
      "type": "transform",
      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",
      "x": "611.175px",
      "y": "352.685px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "title",
          "value": "Row Values",
          "widget": "textfield",
          "title": "Title",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "n",
          "value": "10",
          "widget": "textfield",
          "title": "Num Rows to Print",
          "description": "number of rows to be printed",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "displayDataType",
          "value": "true",
          "widget": "array",
          "title": "Display Data Type",
          "description": "If true display rows DataType",
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "17",
      "name": "StickyNote",
      "description": "Allows capturing Notes on the Workflow",
      "details": "",
      "examples": "",
      "type": "sticky",
      "nodeClass": "fire.nodes.doc.NodeStickyNote",
      "x": "46.9915px",
      "y": "78.9943px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "bgColor",
          "value": "gray",
          "widget": "textfield",
          "title": "Bg Color",
          "description": "Background of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "width",
          "value": "438.011364px",
          "widget": "textfield",
          "title": "Width",
          "description": "Width of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "height",
          "value": "101.011364px",
          "widget": "textfield",
          "title": "Height",
          "description": "Height of note",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "comment",
          "value": "<p>Using sales data create a ridge regression model and evaluate model performance</p><p><strong>Features - </strong>unit sold, unit cost, total revenue, total profit, total cost</p><p><strong>Target variable - </strong>unit price</p>",
          "widget": "textarea_rich",
          "title": "Comment",
          "description": "Comments for the Workflow",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        }
      ],
      "engine": "all"
    },
    {
      "id": "18",
      "name": "SklearnRegressionEvaluator",
      "description": "Evaluator for regression, which expects two input columns: prediction and label.",
      "details": "",
      "examples": "",
      "type": "ml-evaluator",
      "nodeClass": "fire.nodes.sklearn.NodeSklearnRegressionEvaluator",
      "x": "599.024px",
      "y": "463.865px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "targetCol",
          "value": "Unit_Cost",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model fitting.",
          "datatypes": [
            "double",
            "integer"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "predictCol",
          "value": "predict",
          "widget": "variable",
          "title": "Prediction Column",
          "description": "The prediction column.",
          "datatypes": [
            "double",
            "integer"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        }
      ],
      "engine": "pyspark"
    },
    {
      "id": "22",
      "name": "SkLearn Ridge Regression",
      "description": "Ridge Regression, solves a regression model where the loss function is the linear least squares function and regularization is given by the l2-norm.",
      "details": "More details are available at : <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html\" target=\"_blank\">scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html</a><br>",
      "examples": "",
      "type": "ml-estimator",
      "nodeClass": "fire.nodes.sklearn.NodeSklearnRidgeRegression",
      "x": "440.298px",
      "y": "195.311px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "targetCol",
          "value": "Unit_Cost",
          "widget": "variable",
          "title": "Target Column",
          "description": "The label column for model fitting",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float",
            "int"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "featureCols",
          "value": "[\"Total_Revenue\",\"Total_Profit\"]",
          "widget": "variables",
          "title": "Feature Columns",
          "description": "Feature columns of type - all numeric, boolean and vector",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float",
            "int"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "alpha",
          "value": "0.5",
          "widget": "textfield",
          "title": "Alpha",
          "description": "Constant that multiplies the L2 term, regularization strength.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "fitintercept",
          "value": "false",
          "widget": "array",
          "title": "Fit Intercept",
          "description": "Whether to calculate the intercept for this model.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "normalize",
          "value": "true",
          "widget": "array",
          "title": "Normalize",
          "description": "This parameter is ignored when `fit_intercept` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "maxiter",
          "value": "2",
          "widget": "textfield",
          "title": "Max Iterations",
          "description": "Maximum number of iterations for conjugate gradient solver.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "tol",
          "value": "1e-3",
          "widget": "textfield",
          "title": "Tolerance",
          "description": "Precision of the solution.",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "solver",
          "value": "svd",
          "widget": "array",
          "title": "Solver",
          "description": "Solver to use in the computational routines.",
          "optionsArray": [
            "auto",
            "svd",
            "cholesky",
            "lsqr",
            "sparse_cg",
            "sag",
            "saga"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "randomstate",
          "value": "-1",
          "widget": "textfield",
          "title": "Random State",
          "description": "The seed of the pseudo random number generator to use when shuffling the data for the solver.'",
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        }
      ],
      "engine": "pyspark"
    },
    {
      "id": "24",
      "name": "Dataset Structured",
      "iconImage": "fa fa-th-list",
      "description": "This Node creates a DataFrame by reading data from HDFS, HIVE etc. The dataset was defined earlier in Fire by using the Dataset Feature. As a user, you just have to select the Dataset of your interest.",
      "details": "This Node creates a DataFrame by reading data from HDFS, HIVE etc.<br>\n<br>\nThe data has been defined earlier in Fire by using the Dataset Feature. As a user, you just have to select the Dataset of your interest.<br>",
      "examples": "<h2> Dataset Structured Node Example</h2>\n<br>\nScenario:<br>\n<br>\nLet's say you have multiple datasets available in your workflow and you want to select one of them as input for the next node. You can use the Dataset Structured node to choose the desired dataset.<br>\n<br>\nConfiguration:<br>\n<br>\n1. **Output Storage Level:** Select the desired storage level for the output DataFrame.<br>\n2. **Dataset:** Choose the dataset from the dropdown list.<br>\n<br>\nOutput:<br>\n<br>\nThe node will output the selected dataset as a DataFrame.<br>",
      "type": "dataset",
      "nodeClass": "fire.nodes.dataset.NodeDatasetStructured",
      "x": "25.8439px",
      "y": "236.847px",
      "fields": [
        {
          "name": "storageLevel",
          "value": "DEFAULT",
          "widget": "array",
          "title": "Output Storage Level",
          "description": "Storage Level of the Output Datasets of this Node",
          "optionsArray": [
            "DEFAULT",
            "NONE",
            "DISK_ONLY",
            "DISK_ONLY_2",
            "MEMORY_ONLY",
            "MEMORY_ONLY_2",
            "MEMORY_ONLY_SER",
            "MEMORY_ONLY_SER_2",
            "MEMORY_AND_DISK",
            "MEMORY_AND_DISK_2",
            "MEMORY_AND_DISK_SER",
            "MEMORY_AND_DISK_SER_2",
            "OFF_HEAP"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        },
        {
          "name": "dataset",
          "value": "72c8cd2b-f684-4dd0-9f9d-f5bc545d651e",
          "widget": "dataset",
          "title": "Dataset",
          "description": "Selected Dataset",
          "required": true,
          "display": true,
          "editable": true,
          "disableRefresh": false,
          "expandable": false,
          "header": ""
        }
      ],
      "engine": "all"
    }
  ],
  "edges": [
    {
      "source": "11",
      "target": "13",
      "id": 1
    },
    {
      "source": "9",
      "target": "22",
      "id": 2
    },
    {
      "source": "22",
      "target": "11",
      "id": 3
    },
    {
      "source": "9",
      "target": "11",
      "id": 4
    },
    {
      "source": "11",
      "target": "18",
      "id": 5
    },
    {
      "source": "24",
      "target": "9",
      "id": 6
    }
  ],
  "dataSetDetails": [
    {
      "id": 819,
      "uuid": "72c8cd2b-f684-4dd0-9f9d-f5bc545d651e",
      "header": true,
      "path": "data/COMMON/100_Sales.csv",
      "delimiter": ",",
      "datasetType": "CSV",
      "datasetSchema": "{\"colNames\":[\"Region\",\"Country\",\"Item_Type\",\"Sales_Channel\",\"Order_Priority\",\"Ship_Date\",\"Unit_Cost\",\"Total_Revenue\",\"Total_Profit\",\"C9\",\"C10\"],\"colTypes\":[\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"STRING\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"STRING\",\"STRING\"],\"colFormats\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"colMLTypes\":[\"TEXT\",\"TEXT\",\"TEXT\",\"TEXT\",\"TEXT\",\"TEXT\",\"NUMERIC\",\"NUMERIC\",\"NUMERIC\",\"TEXT\",\"TEXT\"]}"
    }
  ],
  "engine": "pyspark"
}