{
  "name": "UsingCreateEMRJobflowNode",
  "uuid": "23b0892f-7fa4-4c7d-b76d-266405ecb1c1",
  "category": "EMR",
  "description": "-",
  "parameters": "--var path='pipeline_config.json' --var instance_count=1",
  "nodes": [
    {
      "id": "1",
      "path": "/03-EMR/",
      "name": "Create EMR JobFlow",
      "description": "This node creates a new EMR JobFlow by using details in configuration and passes the EMR ID to the next step.",
      "details": "<h2>Create EMR cluster</h2>\n<br>\nThis node creates a new EMR JobFlow by using details in configuration and passes the EMR ID to the next step.<br>",
      "examples": "<h2> Create EMR JobFlow Examples</h2>\n<br>\n<h4> Example of Instance Groups</h4>\n<br>\n{<br>\n\"Name\": \"Master\",<br>\n\"Market\": \"ON_DEMAND\",<br>\n\"InstanceRole\": \"MASTER\",<br>\n\"InstanceType\": \"m5.xlarge\",<br>\n\"InstanceCount\": 1,<br>\n\"EbsVolumeSizeInGB\": 100,<br>\n\"EbsVolumeType\": \"gp2\",<br>\n\"EbsVolumesPerInstance\": 1<br>\n}<br>\n<br>\n<h4> Explanation</h4>\n<br>\n<ul>\n<li> This configuration creates an instance group for the master node with the specified type and count.</li>\n</ul>\n<h4> Example of Bootstrap Actions</h4>\n<br>\n{<br>\n\"Name\": \"Install Spark\",<br>\n\"ScriptBootstrapAction\": {<br>\n\"Path\": \"s3://my-bucket/bootstrap-scripts/install-spark.sh\"<br>\n}<br>\n}<br>\n<br>\n<h4> Explanation</h4>\n<br>\n<ul>\n<li> This bootstrap action runs a script from S3 to install Spark on the cluster nodes.</li>\n</ul>\n<h4> Example of Configurations</h4>\n<br>\n{<br>\n\"classification\": \"hadoop-env\",<br>\n\"propertiesKey\": \"JAVA_HOME\",<br>\n\"propertiesValue\": \"/usr/lib/jvm/java-1.8.0\"<br>\n}<br>\n<br>\n<h4> Explanation</h4>\n<br>\n<ul>\n<li> This configuration sets the JAVA_HOME environment variable for the Hadoop environment.</li>\n</ul>\n<h4> Usage</h4>\n<br>\n<ul>\n<li> Task ID: \"create_emr_jobflow_task\"</li>\n</ul>\n<h4> Example of Task Configuration</h4>\n<br>\n{<br>\n\"Name\": \"MyEMRJobFlow\",<br>\n\"ClusterName\": \"MyCluster\",<br>\n\"ReleaseLabel\": \"emr-6.2.0\",<br>\n\"LogUri\": \"s3://aws-logs-us-east-1/elasticmapreduce/\",<br>\n\"Applications\": \"Spark\",<br>\n\"JobFlowRole\": \"EMR_EC2_DefaultRole\",<br>\n\"ServiceRole\": \"EMR_DefaultRole\",<br>\n\"Ec2KeyName\": \"my-key-pair\",<br>\n\"Ec2SubnetId\": \"subnet-12345678\",<br>\n\"KeepJobFlowAliveWhenNoSteps\": \"False\",<br>\n\"TerminationProtected\": \"False\",<br>\n\"EmrManagedMasterSecurityGroup\": \"sg-12345678\",<br>\n\"EmrManagedSlaveSecurityGroup\": \"sg-87654321\",<br>\n\"Instances\": [<br>\n{<br>\n\"InstanceGroups\": [<br>\n{<br>\n\"Name\": \"Master\",<br>\n\"Market\": \"ON_DEMAND\",<br>\n\"InstanceRole\": \"MASTER\",<br>\n\"InstanceType\": \"m5.xlarge\",<br>\n\"InstanceCount\": 1,<br>\n\"EbsVolumeSizeInGB\": 100,<br>\n\"EbsVolumeType\": \"gp2\",<br>\n\"EbsVolumesPerInstance\": 1<br>\n},<br>\n{<br>\n\"Name\": \"Core\",<br>\n\"Market\": \"SPOT\",<br>\n\"InstanceRole\": \"CORE\",<br>\n\"InstanceType\": \"m5.xlarge\",<br>\n\"InstanceCount\": 2,<br>\n\"EbsVolumeSizeInGB\": 100,<br>\n\"EbsVolumeType\": \"gp2\",<br>\n\"EbsVolumesPerInstance\": 1<br>\n}<br>\n]<br>\n}<br>\n],<br>\n\"BootstrapActions\": [<br>\n{<br>\n\"Name\": \"Install Packages\",<br>\n\"ScriptBootstrapAction\": {<br>\n\"Path\": \"s3://my-bucket/scripts/install_packages.sh\",<br>\n\"Args\": [\"arg1\", \"arg2\"]<br>\n}<br>\n}<br>\n],<br>\n\"Tags\": [<br>\n{<br>\n\"Key\": \"Environment\",<br>\n\"Value\": \"Production\"<br>\n}<br>\n],<br>\n\"Configurations\": [<br>\n{<br>\n\"classification\": \"spark-env\",<br>\n\"propertiesKey\": \"SPARK_HOME\",<br>\n\"propertiesValue\": \"/usr/lib/spark\"<br>\n}<br>\n]<br>\n}<br>",
      "type": "emr",
      "nodeClass": "fire.pipelineNodes.EMR",
      "x": "305.3px",
      "y": "289.288px",
      "fields": [
        {
          "name": "Name",
          "value": "CreateEMRExample",
          "widget": "textfield",
          "title": "Task Name",
          "description": "Unique name of the task in airflow DAG.",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "ClusterName",
          "value": "EMR-1905-HDC1-Daily-{{execution_date.in_timezone('America/Chicago').strftime('%Y%m%d')}}",
          "widget": "textfield",
          "title": "Cluster Name",
          "description": "Cluster name.",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "ReleaseLabel",
          "value": "emr-6.9.0",
          "widget": "textfield",
          "title": "Release Label",
          "description": "ReleaseLabel like emr-6.2.0 ,emr-6.2.1, emr-6.3.0 etc",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "LogUri",
          "value": "s3://aws-logs-us-east-1/elasticmapreduce/EMR-1905-HDC-Daily-{{execution_date.in_timezone('America/Chicago').strftime('%Y%m%d')}}/",
          "widget": "textfield",
          "title": "Log URI",
          "description": "Log URI Path",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "LogEncryptionKmsKeyId",
          "value": "",
          "widget": "textfield",
          "title": "Log Encryption Kms Key Id",
          "description": "Log Encryption Kms Key Id",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Applications",
          "value": "Spark",
          "widget": "textfield",
          "title": "Applications",
          "description": "Applications Name is Spark",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "JobFlowRole",
          "value": "EMR_EC2_DefaultRole",
          "widget": "textfield",
          "title": "JobFlow Role",
          "description": "The IAM role that was specified when the JobFlow was created. The EC2 instances of the JobFlow assume this role",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "ServiceRole",
          "value": "EMR_DefaultRole",
          "widget": "textfield",
          "title": "Service Role",
          "description": "The IAM role that is assumed by the Amazon EMR service to access Amazon Web Services resources on your behalf",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "SecurityConfiguration",
          "value": "",
          "widget": "textfield",
          "title": "Security Configuration",
          "description": "SecurityConfiguration",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "CustomAmiId",
          "value": "",
          "widget": "textfield",
          "title": "Custom AMI ID",
          "description": "Custom AMI ID",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "StepConcurrencyLevel",
          "value": "1",
          "widget": "textfield",
          "title": "Step Concurrency Level",
          "description": "Step Concurrency Level",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "retries",
          "value": "",
          "widget": "textfield",
          "title": "Retries",
          "description": "Retries",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "retry_delay",
          "value": "",
          "widget": "textfield",
          "title": "Retry Delay",
          "description": "Retry Delay(seconds)",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "aws_conn_id",
          "value": "aws_s3_connection_test_for_change",
          "widget": "textfield",
          "title": "AWS Connection ID",
          "description": "AWS Connection ID",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Instances",
          "value": "",
          "widget": "tab",
          "title": "Instances",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Ec2KeyName",
          "value": "sf",
          "widget": "textfield",
          "title": "EC2 Key Name",
          "description": "EC2 Key Name",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "ServiceAccessSecurityGroup",
          "value": "",
          "widget": "textfield",
          "title": "Service Access Security Group",
          "description": "Service Access Security Group",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Ec2SubnetId",
          "value": "subnet-42456219",
          "widget": "textfield",
          "title": "EC2 Subnet ID",
          "description": "EC2 Subnet ID",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "KeepJobFlowAliveWhenNoSteps",
          "value": "False",
          "widget": "array",
          "title": "Keep JobFlow Alive When No Steps",
          "description": "Specifies whether the JobFlow should remain available after completing all steps. Defaults to true",
          "optionsArray": [
            "True",
            "False"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "TerminationProtected",
          "value": "False",
          "widget": "array",
          "title": "Termination Protected",
          "description": "Indicates whether Amazon EMR will lock the cluster to prevent the EC2 instances from being terminated by an API call or user intervention, or in the event of a cluster error",
          "optionsArray": [
            "True",
            "False"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "EmrManagedMasterSecurityGroup",
          "value": "sg-06f134b77406cf93b",
          "widget": "textfield",
          "title": "EMR Managed Master Security Group",
          "description": "Parameter to specify a custom managed security group for the master instance",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "EmrManagedSlaveSecurityGroup",
          "value": "sg-0469690a2e579fc32",
          "widget": "textfield",
          "title": "EMR Managed Slave Security Group",
          "description": "Parameter to specify a custom managed security group for core and task instances",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "InstanceGroups",
          "value": "[{\"Name\":\"Master\",\"Market\":\"ON_DEMAND\",\"InstanceRole\":\"MASTER\",\"InstanceType\":\"m4.4xlarge\",\"InstanceCount\":\"1\",\"EbsVolumeSizeInGB\":\"\",\"EbsVolumeType\":\"\",\"EbsVolumesPerInstance\":\"\"},{\"Name\":\"Slave\",\"Market\":\"ON_DEMAND\",\"InstanceRole\":\"CORE\",\"InstanceType\":\"m4.xlarge\",\"InstanceCount\":1,\"EbsVolumeSizeInGB\":\"\",\"EbsVolumeType\":\"\",\"EbsVolumesPerInstance\":\"\"}]",
          "widget": "variablesList",
          "title": "Instance Groups",
          "description": "InstanceRole: Instance group role in the cluster, InstanceType: EC2 instance type, InstanceCount:Actual count of running instances,VolumeSpecification: Volume Specification,VolumesPerInstance: Volumes Per Instance",
          "optionsArray": [
            "Name",
            "Market",
            "InstanceRole",
            "InstanceType",
            "InstanceCount",
            "EbsVolumeSizeInGB",
            "EbsVolumeType",
            "EbsVolumesPerInstance"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "EbsRootVolume",
          "value": "",
          "widget": "variables",
          "title": "Ebs Root Volume",
          "description": "EBS root volume applies to the operating systems and applications that you install on the cluster.",
          "optionsArray": [
            "Size(GiB)",
            "IOPS",
            "Throughput(MiB/s)"
          ],
          "optionArrayDescription": [
            "15 - 100 GiB per volume General Purpose SSD (gp3)",
            "3000 - 16000 IOPS per volume. Choose a maximum ratio of 500:1 between IOPS and volume size.",
            "125 - 1000 MiB/s per volume. Choose a maximum ratio of 0.25:1 between throughput and IOPS."
          ],
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Bootstrapactions",
          "value": "",
          "widget": "tab",
          "title": "Bootstrap Actions",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "BootstrapActions",
          "value": "[]",
          "widget": "variablesList",
          "title": "Bootstrap Actions",
          "description": "ScriptBootstrapAction: Instance group role in the cluster",
          "optionsArray": [
            "Name",
            "ScriptBootstrapAction",
            "Arguments"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Advanced",
          "value": "",
          "widget": "tab",
          "title": "Advanced",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Tags",
          "value": "[{\"Key\":\"COST_CENTER\",\"Value\":\"30025\"},{\"Key\":\"BUSINESS_AREA\",\"Value\":\"HDC\"}]",
          "widget": "variablesList",
          "title": "Tags",
          "description": "key: Tag Key,Value: Tag Value",
          "optionsArray": [
            "Key",
            "Value"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Configurations",
          "value": "[{\"classification\":\"spark\",\"propertiesKey\":\"maximizeResourceAllocation\",\"propertiesValue\":\"true\"},{\"classification\":\"spark-hive-site\",\"propertiesKey\":\"hive.metastore.client.factory.class\",\"propertiesValue\":\"com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory\"}]",
          "widget": "variablesList",
          "title": "Configurations",
          "description": "key: Tag Key,Value: Tag Value",
          "optionsArray": [
            "classification",
            "propertiesKey",
            "propertiesValue"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        }
      ]
    },
    {
      "id": "2",
      "path": "/10-Configuration/",
      "name": "Add DAG Variables",
      "description": "This node executes Python code to add DAG variables using the Python operator",
      "details": "<h2>Add DAG Variables</h2>\n<br>\nThis node executes Python code to add DAG variables using the Python operator.<br>\nCreate the variable to be used accross the pipeline and push the variable name(key) and value to XCOM. And access the value of key from XCOM with pull logic.<br>\n<br>\n<b>Python code</b>:<br>\nimport time<br>\nimport os<br>\nimport binascii<br>\n<br>\ndef generateVariable(task_instance):<br>\n  START_TIME = time.time();<br>\n  HEX=hex(int(START_TIME))[2:]<br>\n  CORRELATION_ID=\"1-{}-{}\".format(HEX, binascii.hexlify(os.urandom(12)).decode('utf-8'));<br>\n  task_instance.xcom_push(key=\"correlation_id\", value = CORRELATION_ID)<br>\n<br>\n<b>Example</b>:<br>\nXCOM PUSH : task_instance.xcom_push(key=\"correlation_id\", value = CORRELATION_ID)<br>\nXCOM PULL : {{task_instance.xcom_pull(key='correlation_id')}}<br>",
      "examples": "<h2> Add DAG Variables Examples</h2>\n<br>\n<h4> Example of Python Code for Adding Variables</h4>\n<br>\nimport time<br>\nimport os<br>\nimport binascii<br>\n<br>\ndef generateVariable(task_instance, **kwargs):<br>\nSTART_TIME = time.time()<br>\nHEX = hex(int(START_TIME))[2:]<br>\nCORRELATION_ID = kwargs['dag_run'].conf.get('correlation_id')<br>\nif CORRELATION_ID:<br>\nCORRELATION_ID = CORRELATION_ID<br>\nelse:<br>\nCORRELATION_ID = \"1-{}-{}\".format(HEX, binascii.hexlify(os.urandom(12)).decode('utf-8'))<br>\ntask_instance.xcom_push(key=\"correlation_id\", value=CORRELATION_ID)<br>\n<br>\n<h4> Explanation</h4>\n<ul>\n<li> This code generates a unique correlation ID using the current timestamp and random bytes. It pushes this ID to XCOM with the key correlation_id.</li>\n</ul>\n<h4> Example of XCOM Push and Pull</h4>\n<ul>\n<li> XCOM PUSH: task_instance.xcom_push(key=\"correlation_id\", value=CORRELATION_ID)</li>\n</ul>\n<ul>\n<li> XCOM PULL: {{ task_instance.xcom_pull(key='correlation_id') }}</li>\n</ul>\n<h4> Usage</h4>\nTask ID: \"add_dag_variables_task\"<br>",
      "type": "DAGVariable",
      "nodeClass": "fire.pipelineNodes.addDAGVariables",
      "x": "147.1px",
      "y": "293.1px",
      "fields": [
        {
          "name": "python",
          "value": "import time\nimport os\nimport binascii\n\n\ndef generateVariable(task_instance, **kwargs):\n    START_TIME = time.time()\n    HEX = hex(int(START_TIME))[2:]\n    CORRELATION_ID = kwargs['dag_run'].conf.get('correlation_id')\n    if CORRELATION_ID:\n        CORRELATION_ID = CORRELATION_ID\n        print('Inside if')\n    else:\n        CORRELATION_ID = \"1-{}-{}\".format(HEX, binascii.hexlify(os.urandom(12)).decode('utf-8'))\n        print('Inside else')\n    task_instance.xcom_push(key=\"correlation_id\", value=CORRELATION_ID)\n    CONFIG = {\"command\": {\"sub-command\": \"pwd\"}}\n    task_instance.xcom_push(key=\"CONFIG\", value=CONFIG)",
          "widget": "shellcommand",
          "title": "Python",
          "description": "Write Python Code here",
          "required": false,
          "display": false,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Name",
          "value": "generateVariable",
          "widget": "textfield",
          "title": "Task Name",
          "description": "Unique name of the task in Airflow DAG",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "python_callable",
          "value": "generateVariable",
          "widget": "textfield",
          "title": "Python Callable",
          "description": "Input name of user defined function name in the Python code.",
          "required": true,
          "display": false,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Variables",
          "value": "correlation_id",
          "widget": "textfield",
          "title": "XCOM Key Variables",
          "description": "Key variables to used to pull value from XCOM",
          "required": false,
          "display": true,
          "editable": false,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        }
      ]
    },
    {
      "id": "6",
      "path": "/09-Documentation/",
      "name": "Sticky Note",
      "description": "Allows capturing Notes",
      "details": "<h2>Sticky Note</h2>\n<br>\nAllows capturing Notes.<br>",
      "examples": "",
      "type": "sticky",
      "nodeClass": "fire.pipelineNodes.doc.NodeStickyNote",
      "x": "170px",
      "y": "81px",
      "fields": [
        {
          "name": "bgColor",
          "value": "blue",
          "widget": "textfield",
          "title": "Bg Color",
          "description": "Background of the Note",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "width",
          "value": "605.306878px",
          "widget": "textfield",
          "title": "Width",
          "description": "Width of the Note",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "height",
          "value": "127.306878px",
          "widget": "textfield",
          "title": "Height",
          "description": "Height of the note",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "comment",
          "value": "<p><strong>Create EMR Jobflow</strong>&nbsp;node creates a new EMR Jobflow by using the details in configuration and passes the EMR id to the next step.</p><p><br></p><p><strong>Documentation</strong>: https://docs.sparkflows.io/en/latest/user-guide/pipeline-development/nodes/create-emr-jobflow.html</p>",
          "widget": "textarea_rich",
          "title": "Comment",
          "description": "Comments for the Pipeline",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        }
      ]
    },
    {
      "id": "7",
      "path": "/03-EMR/",
      "name": "Read-And-Display-Data",
      "description": "This node adds the workflow in the project as an EMR step and executes it.",
      "details": "<h2>EMR Workflow</h2>\n<br>\nThis node adds the workflow in the project as an EMR step and executes it.<br>",
      "examples": "<h2> EMR Workflow Examples</h2>\n<br>\n<h4> Example of Adding an EMR Workflow</h4>\n<br>\n{<br>\n\"Name\": \"MyEMRWorkflow\",<br>\n\"ClusterId\": \"j-1234567890ABCDE\",<br>\n\"ActionOnFailure\": \"CONTINUE\",<br>\n\"SparkConf\": \"spark.executor.instances=2,spark.executor.memory=4g\",<br>\n\"Jars\": \"s3://my-bucket/my-jar.jar,s3://my-bucket/my-other-jar.jar\",<br>\n\"workflowUUID\": \"123e4567-e89b-12d3-a456-426614174000\",<br>\n\"aws_conn_id\": \"aws_default\",<br>\n\"deploy-mode\": \"client\",<br>\n\"parameters\": [<br>\n{\"Key\": \"inputPath\", \"Value\": \"s3://my-bucket/input/\"},<br>\n{\"Key\": \"outputPath\", \"Value\": \"s3://my-bucket/output/\"}<br>\n],<br>\n\"trigger_rule\": \"all_success\"<br>\n}<br>\n<br>\n<h4> Explanation</h4>\n<ul>\n<li> This example demonstrates how to define an EMR workflow with specific parameters, including the task name, action on failure, Spark configurations, and the workflow UUID.</li>\n</ul>\n<h4> Usage</h4>\n<ul>\n<li> Task ID: \"emr_workflow_task\"</li>\n<li> Workflow ID: 123e4567-e89b-12d3-a456-426614174000</li>\n</ul>\n<h4> Example of Adding an EMR Workflow with Specified Cluster ID</h4>\n<br>\n{<br>\n\"Name\": \"DataProcessingWorkflow\",<br>\n\"ClusterId\": \"j-0987654321XYZ\",<br>\n\"ActionOnFailure\": \"TERMINATE_JOB_FLOW\",<br>\n\"SparkConf\": \"spark.executor.instances=4,spark.executor.memory=8g\",<br>\n\"Jars\": \"s3://my-bucket/data-processing-jar.jar\",<br>\n\"workflowUUID\": \"987e6543-e21b-43d3-a654-426614174111\",<br>\n\"aws_conn_id\": \"my_aws_connection\",<br>\n\"deploy-mode\": \"cluster\",<br>\n\"parameters\": [<br>\n{\"Key\": \"inputPath\", \"Value\": \"s3://my-bucket/data/\"},<br>\n{\"Key\": \"outputPath\", \"Value\": \"s3://my-bucket/data/output/\"}<br>\n],<br>\n\"trigger_rule\": \"one_success\"<br>\n}<br>\n<br>\n<h4> Explanation</h4>\n<ul>\n<li> This example adds an EMR workflow with a specified cluster ID and a different action on failure. It demonstrates how to adjust parameters for different use cases.</li>\n</ul>\n<h4> Usage</h4>\n<ul>\n<li> Task ID: \"data_processing_workflow_task\"</li>\n<li> Workflow ID: 987e6543-e21b-43d3-a654-426614174111</li>\n</ul>",
      "type": "workflow",
      "nodeClass": "fire.pipelineNodes.EMRWorkflow",
      "x": "520px",
      "y": "236px",
      "fields": [
        {
          "name": "Name",
          "value": "DisplayOutput",
          "widget": "textfield",
          "title": "Task Name",
          "description": "Unique name of the task in Airflow DAG",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "ClusterId",
          "value": "",
          "widget": "textfield",
          "title": "Cluster ID",
          "description": "If Cluster ID is empty, the step tries to pick the cluster ID from previous create EMR node(task)",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "ActionOnFailure",
          "value": "CONTINUE",
          "widget": "array",
          "title": "Action On Failure",
          "description": "Action to be taken on Failure",
          "optionsArray": [
            "CANCEL_AND_WAIT",
            "CONTINUE",
            "TERMINATE_JOB_FLOW",
            "TERMINATE_CLUSTER"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "SparkConf",
          "value": "",
          "widget": "textfield",
          "title": "Spark Conf",
          "description": "Add spark conf values in comma separated as key=value",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Jars",
          "value": "",
          "widget": "textfield",
          "title": "JARS",
          "description": "Comma seperated list of Jars",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": true,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "Packages",
          "value": "",
          "widget": "textfield",
          "title": "Packages",
          "description": "Comma seperated list of Packages",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": true,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "workflowUUID",
          "value": "1c30fe75-8c4b-4d06-8f0e-900577aa6c48",
          "widget": "workflow",
          "title": "Workflow ID",
          "description": "Select the appropriate workflow",
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "aws_conn_id",
          "value": "",
          "widget": "textfield",
          "title": "AWS Connection ID",
          "description": "AWS Connection ID",
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "deploy-mode",
          "value": "client",
          "widget": "array",
          "title": "Deploy Mode",
          "description": "Whether to deploy your driver on the worker nodes (cluster) or locally as an external client (client)",
          "optionsArray": [
            "cluster",
            "client"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "parameters",
          "value": "[]",
          "widget": "variablesList",
          "title": "Parameters",
          "description": "List of parameters to be passed to the workflow",
          "optionsArray": [
            "Key",
            "Value"
          ],
          "required": false,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        },
        {
          "name": "trigger_rule",
          "value": "all_success",
          "widget": "array",
          "title": "Trigger Rule",
          "description": "Trigger Rule to be used",
          "optionsArray": [
            "all_success",
            "all_failed",
            "all_done",
            "all_skipped",
            "one_failed",
            "one_success",
            "none_failed",
            "none_failed_min_one_success",
            "none_skipped",
            "always"
          ],
          "required": true,
          "display": true,
          "editable": true,
          "expandable": false,
          "disableRefresh": false,
          "keyValue": false
        }
      ]
    }
  ],
  "edges": [
    {
      "source": "2",
      "target": "1",
      "id": 1
    },
    {
      "source": "1",
      "target": "7",
      "id": 2
    }
  ]
}