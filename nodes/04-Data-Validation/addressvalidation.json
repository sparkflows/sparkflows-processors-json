{
  "id": "11",
  "name": "Validate Address",
  "description": "This node validate the USA address",
  "input": "It accepts a DataFrame as input from the previous Node",
  "output": "A new column isValidAddress is added which contains valid or inValid values",
  "type": "transform",
  "nodeClass": "fire.nodes.etl.NodeValidateAddress",
  "fields" : [

    {"name":"inputColName", "value": "", "widget": "variable", "title": "Input Column Name", "description": "input column name", "required": true}

  ]
}

start-details:

h2:Address Validation Node Details

This node validates an address.

It creates a new Dataframe by adding a column stating where Address Column contains valid address or not.

Some of the valid address formats are as below:
* 123 xyx avenue
* 1/1 block-D street

end-details:

start-examples:

h2:Address Validation Node Examples

Incoming Dataframe has following rows:

CUST_CD    |    Address
-----------------------------------
CUST001    |    123 xyx avenue
CUST002    |    abc 986 street
CUST003    |    1/1 block-D street
CUST004    |    123 9876block park

If ValidateAddress node is configured to validate address mentioned in [Address] column then outgoing Dataframe would be created as below:

CUST_CD    |    Address               |    isValidAddress
--------------------------------------------------------------
CUST001    |    123 xyx avenue        |    valid
CUST002    |    abc 986 street        |    inValid
CUST003    |    1/1 block-D street    |    valid
CUST004    |    123 9876block park    |    inValid

end-examples:
