{
  "id": "1",
  "name": "Row Filter",
  "description": "This node creates a new DataFrame containing the rows that satisfy the given condition",
  "input": "It accepts DataFrame as input from the previous Node",
  "output": "This node filters the rows based on the conditional expression to generate the output DataFrame",
  "type": "transform",
  "engine": "all",
  "nodeClass": "fire.nodes.etl.NodeRowFilter",
  "fields" : [
    {"name":"conditionExpr", "value":"", "widget": "code_editor", "type": "sparksql", "title": "Conditional Expression",
      "description": "The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real > 0 and (category = 1 or category == 2) and goal > 100"
    , "required": true}
  ]
}

start-details:

h2:Details

Row filter allows the user to filter out rows that do not meet a set condition. Rows that meet the condition are passed on to the next node in a new dataframe. 

end-details:

start-examples:

h2:Examples of Conditional Expression

Below are some examples of the Conditions Expression which can be used.

* col1 > 5 AND col2 > 3

* name is not NULL

* name is NULL

* usd_pledged_real > 0 and (category = "Narrative Film" or category == "Music") and goal > 100

* dt > '2021-09-03'  (dt column is of type date)

* datetime > '2011-01-01 00:00:00.0'     (datetime column is of type timestamp)

* datetime > '2011-01-01 00:00:00.0' and datetime < '2016-01-01 00:00:00.0'

end-examples:



