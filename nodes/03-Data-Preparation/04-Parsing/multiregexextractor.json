{
  "id": "11",
  "name": "Multi Regex Extractor",
  "description": "This node is used to extract pattern from input columns",
  "input": "This type of node takes in a DataFrame and transforms it to another DataFrame",
  "output": "This node extract pattern from input columns as specified",
  "type": "transform",
  "engine": "all",
  "nodeClass": "fire.nodes.etl.NodeMultiRegexExtractor",
  "fields" : [

    {"name": "inputColNames", 
         "value":"[]",
         "widget": "variables_list_select",
         "title": "InputColumnsName",
         "description": "Columns"},

    {"name":"outputColNames",
       "value":"[]",
      "widget": "variables_list_textfield",
      "title": "OuputColumnsName", 
      "description": "name of the output column"},
     
    {"name": "patterns", 
        "value":"[]", 
        "widget": "variables_list_textfield",
         "title": "Patterns", 
         "description": "patterns or regex to extract the input column name"},
    
      {"name": "groups", 
        "value":"[]", 
        "widget": "variables_list_textfield",
         "title": "Groups", 
         "description": "An regular expression group number starting with 1, defining which portion of the matching string will be returned"}
    

  ]
}

start-details:

This node extracts data from columns present in the incoming Dataframe based on provided pattern and add them as new columns in outgoing Dataframe.

end-details:

start-examples:

Incoming Dataframe has following rows:

CUST_CD    |    CUST_NAME    |    AGE    |    DATE_OF_JOINING    |    SALARY
-------------------------------------------------------------------------------------
C01        |    MATT         |    50     |    12-02-2002         |    USD 200000.00
C02        |    LISA         |    45     |    15-11-2020         |    GBP 100000.00
C03        |    ROBIN        |    30     |    10-10-2015         |    EUR 15000.00
C04        |    MARCUS       |    35     |    01-01-2021         |    AUD 350000.00

If MultiRegexExtractor node is configured to extract data based on patterns as mentioned below:

INPUTCOLUMNSNAME    |    OUPUTCOLUMNSNAME    |    PATTERNS    |    GROUPS 	
---------------------------------------------------------------------------
CUST_CD             |    Cust_ID             |    \d{1,2}     |    0
DATE_OF_JOINING     |    DOJ_Year            |    \d{4}       |    0
SALARY              |    Currency            |    \w{3}       |    0

then outgoing Dataframe would be created as below:

CUST_CD    |    CUST_NAME    |    AGE    |    DATE_OF_JOINING    |    SALARY         |    Cust_ID    |    DOJ_Year    |    Currency
------------------------------------------------------------------------------------------------------------------------------------
C01        |    MATT         |    50     |    12-02-2002         |    USD 200000.00  |    01         |    2002        |    USD
C02        |    LISA         |    45     |    15-11-2020         |    GBP 100000.00  |    02         |    2020        |    GBP
C03        |    ROBIN        |    30     |    10-10-2015         |    EUR 15000.00   |    03         |    2015        |    EUR
C04        |    MARCUS       |    35     |    01-01-2021         |    AUD 350000.00  |    04         |    2021        |    AUD

end-examples:
