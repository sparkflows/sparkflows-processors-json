{
  "id": "7",
  "name": "Paragraph Splitter",
  "description": "",
  "type": "transform",
  "engine": "pyspark",
  "nodeClass": "fire.nodes.etl.NodeParagraphSplitter",
  "fields" : [

    {"name":"filePath", "display":true,"value":"", "widget": "textfield", "required":true, "title": "Path", "description": "Path for text file to be parsed"},
    {"name": "outputCol", "value":"paragraphs", "widget": "textfield", "title": "Output Column", "description": "Name for output column", "datatypes":["string"]},
    {"name": "dropTopRows", "value":0, "widget": "textfield", "title": "Drop First N rows", "description": "Drop Top N Rows", "datatypes":["long"]},
    {"name": "dropBottomRows", "value":0, "widget": "textfield", "title": "Drop Last N rows", "description": "Drop Bottom N Rows", "datatypes":["long"]}
  ]
}

start-details:

h2: Paragraph Splitter Node

h4: Overview:

The Paragraph Splitter node splits text data into paragraphs based on specified delimiters. It's particularly useful for processing text data like articles, blog posts, or emails.

h4: Input:

Input Column: The column containing the text data to be split.
Paragraph Separator: The delimiter used to separate paragraphs (e.g., "\n\n").
Drop First N Rows: The number of rows to skip from the beginning.
Drop Last N Rows: The number of rows to skip from the end.

h4: Output:

The node outputs a new column containing the split paragraphs.

end-details:

start-examples:

Example:

Let's assume we have a column named "text" containing the following text:

This is the first paragraph.

This is the second paragraph.

This is the third paragraph.
Configure the Node:

Input Column: text
Paragraph Separator: "\n\n"
Node Execution:

The node will split the text into three paragraphs and create a new column containing the split paragraphs.

end-examples:
