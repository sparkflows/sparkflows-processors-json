{
  "id": "11",
  "name": "Geo IP",
  "description": "This node converts IP to geo location",
  "input": "The input dataframe is passed in the variable inDF",
  "output": "Transforms the IP to Geo location",
  "type": "transform",
  "nodeClass": "fire.nodes.etl.NodeGeoIP",
  "fields" : [
    {"name":"ipCol", "value":"", "widget": "variable", "title": "IP Column", "description": "IP Column in the DataFrame", "datatypes":["string"]},
    {"name":"databaseFilePath", "value":"data/geoip/GeoIPCity.dat", "widget": "textfield", "title": "Database File Path", "description": "Database File Path"}
  ]
}

start-details:

h2: Geo IP Node

This node enriches a dataset with geographic information based on IP addresses. It uses a GeoIP database to map IP addresses to countries, regions, cities, and other location details.

end-details:

start-examples:

h2: Geo IP Node Example

Given the following dataset:

id	column1	column2	column3	column4	column5	column6	column7	column8	IP_Address
1	10.2	5	12	20	"A"	"B"	"C"	"D"	192.168.1.1
2	11.3	6	15	30	"A"	"B"	"C"	"D"	8.8.8.8
3	12.4	7	18	40	"A"	"B"	"C"	"D"	203.0.113.1

If you configure the Geo IP node to use a GeoIP database and specify the IP_Address column, the output might look like this:

| id | column1 | column2 | column3 | column4 | column5 | column6 | column7 | column8 | IP_Address | Country | Region | City | Latitude | Longitude |
|---|---|---|---|---|---|---|---|---|---|---|---|---|
| 1 | 10.2 | 5 | 12 | 20 | "A" | "B" | "C" | "D" | 192.168.1.1 |  |  |  |  |  |
| 2 | 11.3 | 6 | 15 | 30 | "A" | "B" | "C" | "D" | 8.8.8.8 | United States | California | Mountain View | 37.4192 | -122.0574 |
| 3 | 12.4 | 7 | 18 | 40 | "A" | "B" | "C" | "D" | 203.0.113.1 | United States | California | Mountain View | 37.4192 | -122.0574 |

end-examples:
