{
  "id": "6",
  "name": "DeltaMerge",
  "description": "Insert, delete and update data using the Delta merge command.",
  "input": "",
  "output": "",
  "type": "transform",
  "nodeClass": "fire.nodes.etl.NodeDeltaMerge",
  "fields" : [
    {"name":"targetLocation", "display":true,"value":"", "widget": "textfield", "title": "TargetPath", "description": "Path of the target location"},
    {"name":"sourceAlias", "display":true,"value":"", "widget": "textfield", "title": "Source Alias", "description": "Alias to use for the source DataFrame"},
    {"name":"targetAlias", "display":true,"value":"", "widget": "textfield", "title": "Target Alias", "description": "Alias to use for existing target Delta table"},
    {"name":"mergeCondition", "value":"", "widget": "textarea_large", "type": "sql_mysql", "title": "Merge Condition",
      "required": true, "description": "Condition to merge data from source DataFrame to target table, which would be used to perform update, delete, or insert actions as specified."},

    {"name": "whenMatchedUpdate", "value":"", "widget": "tab", "title": "When Matched Update"},
    {"name":"whenMatchedUpdateAction", "value":"update", "widget": "array","optionsArray": ["update", "ignore"],  "required": true,
      "title": "WhenMatched Update Action", "description":"Update the row from Source that already exists in Target based on Merge Condition."},

    {"name":"whenMatchedUpdateCondition", "value":"", "widget": "textarea_large", "type": "sql_mysql", "title": "Merge Condition",
      "description": "Optional additional condition for updating row. If specified then it must evaluate to true for the row to be updated."},

    {"name": "whenMatchedUpdateTargetColumns", "value":"[]", "widget": "key_array",
      "title": "TargetColumns", "description": "Target Column"},

    {"name": "whenMatchedUpdateExpressions", "value":"[]", "widget": "value_array",
      "title": "Expressions", "description": "Replace default update with expression"},



    {"name": "whenMatchedDelete", "value":"", "widget": "tab", "title": "When Matched Delete"},
    {"name":"whenMatchedDeleteAction", "value":"ignore", "widget": "array","optionsArray": ["delete", "ignore"],  "required": true,
      "title": "WhenMatched Delete Action", "description":"Delete rows if Merge Condition and the optional additional condition evaluates to true."},

    {"name":"whenMatchedDeleteCondition", "value":"", "widget": "textarea_large", "type": "sql_mysql", "title": "WhenMatched Delete Condition",
      "description": "Optional additional condition for deleting row. If a condition is specified then it must evaluate to true for the row to be deleted."},




    {"name": "whenNotMatched", "value":"", "widget": "tab", "title": "When Not Matched"},
    {"name":"whenNotMatchedAction", "value":"insert", "widget": "array","optionsArray": ["insert", "ignore"],  "required": true,
      "title": "WhenNot Matched Action", "description":"The action to perform if the row from Source is not present in Target based on Merge Condition"},

    {"name":"whenNotMatchedCondition", "value":"", "widget": "textarea_large", "type": "sql_mysql", "title": "WhenNot Matched Condition",
      "description": "Optional condition for inserting row. If a condition is specified then it must evaluate to true for the row to be updated."},

    {"name": "whenNotMatchedTargetColumns", "value":"[]", "widget": "key_array",
      "title": "TargetColumns", "description": "Target Column"},

    {"name": "whenNotMatchedExpressions", "value":"[]", "widget": "value_array",
      "title": "Expressions", "description": "Replace default insert with expression"}
  ]
}
start-details:

h2: Delta Merge Node Details

Insert, delete and update data using the Delta merge command.

h4: Parameters to be set:
General Tab:
* OUTPUT STORAGE LEVEL: Choose how the data should be stored (e.g., DEFAULT, DISK_ONLY).
* TARGET PATH: Specify the directory where the Delta Lake table is located. Use the "Browse" button to navigate and select the location.
* SOURCE ALIAS: Provide an alias for the source DataFrame (e.g., "source"). This alias will be used in the merge condition.
* TARGET ALIAS: Provide an alias for the target Delta Lake table (e.g., "target"). This alias will be used in the merge condition.
* MERGE CONDITION: Specify the condition used to match rows between the source DataFrame and the target Delta Lake table. This condition is a SQL expression that typically involves comparing columns from the source and target.
When Matched Update Tab:
* Update Columns: Specify which columns in the target table should be updated based on matching conditions. Define the mappings between source and target columns.
When Matched Delete Tab:
* Delete Condition: Define the condition for deleting records from the target table. Records satisfying this condition will be deleted.
When Not Matched Tab:
* Insert Columns: Specify which columns should be inserted into the target table when no match is found. Define the mappings for the inserted values.

end-details:

start-examples:

h2: Delta Merge Node Examples

h4: Example of Merging Data into a Delta Lake Table
General Tab:
* OUTPUT STORAGE LEVEL: DEFAULT
* TARGET PATH: /user/hive/warehouse/my_delta_table
* SOURCE ALIAS: source
* TARGET ALIAS: target
* MERGE CONDITION: source.customer_id = target.customer_id
When Matched Update Tab:
* Update Columns: target.name = source.name, target.age = source.age
When Matched Delete Tab:
*Delete Condition: source.status = 'inactive'
When Not Matched Tab:
*Insert Columns: (customer_id, name, age, status)
*Values to Insert: (source.customer_id, source.name, source.age, 'new')
This configuration would merge data from the source DataFrame (source) into the Delta Lake table located at /user/hive/warehouse/my_delta_table (target). Matching rows update name and age, inactive rows are deleted, and new rows are inserted with the specified columns and values.

end-examples:
