{ "id": "1",
  "name": "ColumnValuesToBeBetween",
  "description": "",
  "type": "transform",
  "nodeClass": "fire.nodes.quality.NodeCheckColumnValuesToBeBetween",
  "fields" :
  [
    {"name": "cols", "value":"[]", "widget": "variables_list_select","title": "Column Name", "description": "The column name.","datatypes":["integer", "long", "double", "float"]},
    {"name": "min", "value":"[]", "widget": "variables_list_textfield","title": "Min", "description": "The minimum value of column."},
    {"name": "max", "value":"[]", "widget": "variables_list_textfield","title": "Max", "description": " The Maximum value of range"},
    {"name": "weightage", "value":"1", "widget": "textfield","title": "Weightage", "description": " Weightage"}
  ]
}

start-details:

h2: Column Values To Be Between Node

h4: Overview:

The Column Values To Be Between node checks if the values in a specific column are within a specified range. This is useful for data quality checks and ensuring data integrity.

h4: Input:

Column Name: The name of the column to check.
Min: The minimum allowed value.
Max: The maximum allowed value.

h4: Output:

The node will flag records where the specified column value is outside the defined range.

end-details:

start-examples:

Example:

Let's assume we have a column named age and we want to identify records where the age is less than 0 or greater than 120.

Configure the Node:

Column Name: age
Min: 0
Max: 120
Node Execution:

Records with an age less than 0 or greater than 120 will be flagged.

end-examples:
