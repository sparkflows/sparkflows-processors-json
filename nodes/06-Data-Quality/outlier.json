{
  "id": "7",
  "name": "CheckOutliers",
  "type": "transform",
  "description": "This checks if values fall between Inter Quartile Range.",
  "nodeClass": "fire.nodes.quality.NodeCheckOutliers",
  "fields" : [
    {"name": "inputCols", "value":"[]", "widget": "variables_list_select", "title": "Input Column to flag the outlier", "description": "The Input Column to flag the outlier",
      "datatypes":["double", "integer", "float"]},

    {"name": "lowerQuantiles", "value": "[]", "widget": "variables_list_textfield", "title": "LowerQuartile", "description": ""},

    {"name": "upperQuantiles", "value": "[]", "widget": "variables_list_textfield", "title": "UpperQuartile", "description": ""},
    {"name": "weightage", "value":"1", "widget": "textfield","title": "Weightage", "description": " Weightage"}
  ]
}

start-details:

h2: Check Outliers Node

h4: Overview:

The Check Outliers node identifies outliers in a specified column using the Interquartile Range (IQR) method. Outliers are defined as values that fall below the lower quartile minus 1.5 times the IQR or above the upper quartile plus 1.5 times the IQR.

h4: Input:

Input Column to Flag the Outlier: The name of the column to check for outliers.
Lower Quartile: The lower quartile value (optional, can be calculated automatically).
Upper Quartile: The upper quartile value (optional, can be calculated automatically).

h4: Output:

The node will flag records that are identified as outliers.

end-details:

start-examples:

Example:

Let's assume we have a column named age and we want to identify outliers based on the IQR method.

Configure the Node:

Input Column to Flag the Outlier: age
Node Execution:

The node will calculate the lower and upper quartiles of the age column.
Records with age values outside the IQR range will be flagged as outliers.

end-examples:
