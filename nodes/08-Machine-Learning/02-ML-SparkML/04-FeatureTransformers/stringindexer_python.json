{
  "id": "7",
  "name": "String Indexer",
  "description" : "StringIndexer encodes a string column of labels to a column of label indices",

  "input": "It takes in a DataFrame and transforms it to another DataFrame",
  "output": "It adds a new column containing the encoding of the string column of labels to a column of label indices, to the incoming DataFrame.",

  "type": "ml-transformer",
  "nodeClass": "fire.nodes.etl.NodeStringIndexer",
  "engine": "pyspark",
  "fields" : [

    {"name": "inputCol", "value":"", "widget": "variable", "title": "Input Columns", "datatypes":["string"], "description": "Input column"},

    {"name": "outputCol", "value":"", "widget": "textfield", "title": "Output Column", "description": "Output column"}

  ]
}

start-details:

h2: String Indexer Node Details

The String Indexer Node is used to encode a string column of labels to a column of label indices. It takes in a DataFrame and transforms it to another DataFrame by adding a new column containing the encoding of the string column of labels to a column of label indices.
It takes in the parameters handleInvalid, inputCol and outputCol, which are used to handle invalid entries, input column name and output column name respectively.

h4:Input Parameters

HANDLE INVALID: Select whether to skip or throw error on invalid entries.
INPUT COLUMN: Select the required column for encoding.
OUTPUT COLUMN: The name of the output column after encoding.

end-details:

start-examples:

h2: String Indexer Node Example

Consider the below <b>String Indexer</b> output for the <b>color</b> column

id color encoded_color
0   red     2
1   green   1
2   blue    0
3   purple  3

In this example, the input column is color and the output column is encoded_color. The string indexer encodes the color column to a column of label indices. The handleInvalid is set to skip, so any invalid entries will be skipped.

end-examples: