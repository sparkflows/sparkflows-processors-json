{
  "id": "5",
  "name": "Prophet Make Future Dataframe",
  "description": "",
  "input" : "",
  "output": "",
  "engine": "pyspark",
  "type": "transform",

  "nodeClass": "fire.nodes.ts.NodeProphetMakeFutureDataframe",
  "fields" : [

    {"name": "future_period", "value":"24", "widget": "textfield", "title": "Future Period", "description": "Int number of periods to forecast forward."},

    {"name": "frequency", "value":"MS", "widget": "textfield", "title": "Frequency", "description": "Any valid frequency for pd.date_range, such as 'D' or 'M'."},

    {"name": "include_history", "value":"true", "widget": "array", "title": "Include History", "optionsArray": ["false","true"], "description": "Boolean to include the historical dates in the dataframe for predictions"}

  ]
}

start-details:

h2: Prophet Make Future Dataframe Node Details

This node generates a future DataFrame for time series forecasting using the Prophet library. The generated DataFrame includes future periods and optionally includes historical data. Key parameters allow customization of the output, including the number of future periods, frequency of data points, and whether to include historical data.

PartID, SupplierID, PartName, PartCategory, PartQualityScore: Schema details of the generated DataFrame.
Output Storage Level: Defines the storage persistence level of the generated DataFrame.
Future Period: Number of future time steps to include.
Frequency: The granularity of time steps (e.g., MS for monthly start).
Include History: Boolean flag to specify whether historical data is included.

end-details:

start-examples:

h2: Prophet Make Future Dataframe Node Examples

Example Configuration:

Future Period: 24
Frequency: MS (Monthly Start)
Include History: True
Output:

If the current DataFrame has data up to December 2023 and Future Period is set to 24 months, the generated DataFrame will include:

Historical data (if Include History is True).
Future timestamps extending to December 2025, with monthly granularity (MS frequency).
Schema of the output DataFrame:

PartID	|SupplierID	|PartName	|PartCategory	|PartQualityScore
string	|string	    |string	  |string	      |integer
Note: The output will follow the schema defined above, ensuring compatibility with downstream nodes for time series analysis and forecasting.

end-examples:
