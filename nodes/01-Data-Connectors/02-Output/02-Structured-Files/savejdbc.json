{
  "id": "11",
  "name": "Save JDBC",
  "description": "This node writes data to databases using JDBC.",
  "type": "transform",
  "nodeClass": "fire.nodes.save.NodeSaveJDBC1",
  "engine": "scala",
  "fields" : [
    {"name":"connection", "value":"", "widget": "object_array", "title": "Connection", "description": "The JDBC connection to connect" ,"required":"true"},

    {"name":"table", "display": true, "value":"", "widget": "textfield", "title": "DB Table",
      "description": "The JDBC table to write to","required":"true"},

    {"name":"truncate", "value":"false", "widget": "array","optionsArray": ["false","true"],
      "title": "Truncate", "description":"Whether to truncate the table in case Save Mode is Overwrite"},

    {"name":"saveMode", "value":"Append", "widget": "array","optionsArray": ["Append","Overwrite", "ErrorIfExists", "Ignore"],
      "title": "Save Mode", "description":"Whether to Append, Overwrite or Error if the table Exists"},

    {"name": "extraOptions", "value": "", "widget": "tab", "title": "Extra Options"},
    {"name": "extraOptionsKeys", "value":"[]", "widget": "key_array", "title": "Extra Options Keys", "description": "Extra options available for JDBC connections. Examples:\n\n connectTimeout --> Integer value in milliseconds. Sets the maximum time to wait for a connection to be established.\nsocketTimeout --> Integer value in milliseconds. Specifies the timeout for socket reads.\n ssl --> 'true' or 'false'. Enables or disables SSL encryption for the connection.\nautoReconnect --> 'true' or 'false'. Automatically reconnects to the database if the connection fails.\n maxRows --> Integer value. Limits the number of rows returned by a query.\nuseUnicode --> 'true' or 'false'. Defines whether to use Unicode character encoding for the connection.\ncharacterEncoding --> Specifies the character encoding to use for the connection, e.g., 'UTF-8'.\nallowMultiQueries --> 'true' or 'false'. Allows multiple SQL statements to be executed in a single query.\nretries --> Integer value. Number of connection retries in case of failure.\nuseCursorFetch --> 'true' or 'false'. Enables cursor-based fetching for large result sets.\nrewriteBatchedStatements --> 'true' or 'false'. Optimizes batch processing by rewriting SQL statements for batch execution.\nfetchSize --> Integer value. Defines the number of rows to fetch in each database round trip.\nbatchsize --> Integer value. Sets the batch size for batch inserts or updates."},
    {"name": "extraOptionsValues", "value":"[]", "widget": "value_array", "title": "Extra Options Values", "description": "Config Values for the Corresponding keys"}


  ]
}
start-details:

h2: Save JDBC Node Details

This node writes data to databases using JDBC.

h4: Parameters to be set:
* OUTPUT STORAGE LEVEL: Keep this as DEFAULT.
* CONNECTION: Select the desired database connection to use.
* DB TABLE: Specify the name of the database table where the data will be written.
* TRUNCATE: Choose whether to truncate (delete all existing data from) the table before writing (true or false).
* SAVE MODE: Choose how to save existing data in the table (Append, Overwrite, ErrorIfExists, Ignore).
-Append: If data/table already exists, contents of the table are to be appended to existing data. 
-Overwrite: If table already exists, existing data is overwritten by the new content. 
-ErrorIfExists: If data already exists, an exception is thrown and operation stops.
-Ignore: If table already exists, the save operation is ignored.

end-details:

start-examples:

h2: Save JDBC Node Examples

h4: Example of Connection Values
* OUTPUT STORAGE LEVEL: DEFAULT
* CONNECTION: MY_POSTGRES_DB
* DB TABLE: customer_data
* TRUNCATE: false
* SAVE MODE: Append

end-examples:
