{
  "id": "6",
  "name": "Add Step EMR JobFlow",
  "description": "This node adds steps to an existing EMR job flow and executes the arguments as one command using command-runner.jar",
  "type": "addStep",
  "nodeClass": "fire.pipelineNodes.addStep",
  "fields" : [
    {"name": "Name", "value":"", "required":true, "widget": "textfield", "title": "Task Name", "description": "Unique name of the task in Airflow DAG"},
    {"name": "StepName", "value":"", "required":true, "widget": "textfield", "title": "Step Name", "description": "Name of emr step" },
    {"name": "ClusterId", "value":"", "required":false, "widget": "textfield", "title": "Cluster ID", "description": "If Cluster ID is empty, the step tries to pick the cluster ID from previous create EMR node(task)" },
    {"name": "ActionOnFailure", "value":"CONTINUE", "required":true, "widget": "array", "optionsArray": ["CANCEL_AND_WAIT", "CONTINUE", "TERMINATE_JOB_FLOW", "TERMINATE_CLUSTER"], "title": "Action On Failure", "description": "Action to be taken on Failure" },
	{"name": "Jar", "value":"command-runner.jar", "required":true, "widget": "textfield", "title": "JAR", "description": "JAR" },
    {"name": "Jars", "value":"", "required":false, "widget": "textfield", "title": "JARS", "description": "Comma seperated list of Jars" , "expandable": true},
	{"name": "Arguments", "value":"", "required":true, "widget": "textfield", "title": "Arguments", "description": "Comma seperated list of Arguments.", "expandable": true },
    {"name": "retries", "value":"", "required":false, "widget": "textfield", "title": "Retries", "description": "Retries" },
    {"name": "retry_delay", "value":"", "required":false, "widget": "textfield", "title": "Retry Delay", "description": "Retry Delay(seconds)" },
    {"name": "max_retry_delay", "value":"", "required":false, "widget": "textfield", "title": "Max Retry Delay", "description": "Maximum delay interval between retries(seconds)" },
    {"name": "retry_exponential_backoff", "value":"", "required":false, "widget": "array", "optionsArray": ["True","False"], "title": "Retry Exponential Backoff", "description": "Allow progressive longer waits between retries by using exponential backoff algorithm on retry delay" },
    {"name": "aws_conn_id", "value":"", "required":false, "widget": "textfield", "title": "AWS Connection ID", "description": "AWS Connection ID" },
    {"name": "trigger_rule", "value":"all_success", "required":true, "widget": "array", "optionsArray": ["all_success","all_failed","all_done","all_skipped","one_failed","one_success","none_failed","none_failed_min_one_success","none_skipped","always"], "title": "Trigger Rule", "description": "Trigger Rule to be used" }
  ]
}
start-details:

h2:Add step to EMR cluster

This node adds steps to an existing EMR job flow and executes the arguments as one command using command-runner.jar.

AddStepEMRJob uses command-runner.jar by default to run commands as a step in EMR.

Here added example for running the spark-submit command in AddStepEMRJobFlow

Arguments: bash,-c,"spark-submit --master yarn --deploy-mode client --class com.fire.SparkPi s3://sparkflows/fire/fire-spark-test-1.0-jar-with-dependencies.jar {arg}"

end-details:


start-examples:

h2:Add Step EMR JobFlow Examples

h4: Example of Adding a Step to EMR

{
"Name": "Step1",
"StepName": "DataProcessing",
"ClusterId": "j-1234567890ABCDE",
"ActionOnFailure": "CONTINUE",
"Jar": "command-runner.jar",
"Jars": "my-jar1.jar,my-jar2.jar",
"Arguments": "arg1,arg2,arg3",
"aws_conn_id": "my-aws-conn-id",
"trigger_rule": "all_success"
}

h4: Explanation

* This example demonstrates how to add a step to an existing EMR cluster using the specified fields. The Name and StepName are required, along with the Arguments and Jar fields. The ActionOnFailure specifies what to do if the step fails.

h4: Example of XCOM Push

To push a variable to XCOM within the EMR step, you could include logic in the Python operator to handle the processing of the step's output.

h4: Usage
* Task ID: "add_step_emr_jobflow_task"

end-examples:
