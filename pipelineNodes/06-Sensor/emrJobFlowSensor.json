{
  "id": "20",
  "name": "EMR Job Flow Sensor Operator",
  "description": "This node will periodically check if the state of the EMR JobFlow (Cluster) reaches any of the target states.",
  "type": "emrJobFlowSensor",
  "nodeClass": "fire.pipelineNodes.EmrJobFlowSensor",
  "fields" : [
    {"name": "Name", "value":"JobFlowSensor", "required":true, "widget": "textfield", "title": "Task Name", "description": "Unique name of the task in Airflow DAG."},
    {"name": "targetStates", "value":"WAITING", "required":false, "widget": "textfield", "title": "Target States", "description": "The target states, sensor waits until job flow reaches any of these states added in comma separated." },
    {"name": "failedStates", "value":"", "required":false, "widget": "textfield", "title": "Failed States", "description": "The failure states, sensor fails when job flow reaches any of these states added in comma separated." },
    {"name": "retries", "value":"", "required":false, "widget": "textfield", "title": "Retries", "description": "Retries" },
    {"name": "retry_delay", "value":"", "required":false, "widget": "textfield", "title": "Retry Delay", "description": "Retry Delay(seconds)" },
    {"name": "max_retry_delay", "value":"", "required":false, "widget": "textfield", "title": "Max Retry Delay", "description": "Maximum delay interval between retries(seconds)" },
    {"name": "retry_exponential_backoff", "value":"", "required":false, "widget": "array", "optionsArray": ["True","False"], "title": "Retry Exponential Backoff", "description": "Allow progressive longer waits between retries by using exponential backoff algorithm on retry delay" },
    {"name": "aws_conn_id", "value":"", "required":false, "widget": "textfield", "title": "AWS Connection ID", "description": "AWS Connection ID" }
  ]
}
start-details:

h2:EMR Job Flow Sensor operator

This node will periodically check if the state of the EMR JobFlow (Cluster) reaches any of the target states.

end-details:

start-examples:

h2: EMR Job Flow Sensor Operator Examples

h4: Example of Creating an EMR Job Flow Sensor Operator Node

{
"Name": "MyJobFlowSensor",
"targetStates": "RUNNING, TERMINATING",
"failedStates": "TERMINATED, FAILED",
"aws_conn_id": "my_aws_connection"
}

h4: Explanation
* This example demonstrates how to create an EMR Job Flow Sensor Operator node that checks for specific target states of an EMR Job Flow and handles failure states accordingly.

h4: Usage
* Task ID: "my_job_flow_sensor_task"

end-examples: