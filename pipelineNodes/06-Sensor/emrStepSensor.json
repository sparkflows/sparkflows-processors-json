{
  "id": "20",
  "name": "EMR Step Sensor Operator",
  "description": "This node will periodically check if the last added step in EMR is completed or skipped or terminated.",
  "type": "emr",
  "nodeClass": "fire.pipelineNodes.EMRStepSensor",
  "fields" : [
    {"name": "Name", "value":"StepSensor", "required":true, "widget": "textfield", "title": "Task Name", "description": "Unique name of the task in Airflow DAG."},
    {"name": "ClusterId", "value":"", "required":false, "widget": "textfield", "title": "Cluster ID", "description": "If Cluster ID is empty, the step tries to pick the cluster ID from previous create EMR node(task)." },
    {"name": "retries", "value":"", "required":false, "widget": "textfield", "title": "Retries", "description": "Retries" },
    {"name": "retry_delay", "value":"", "required":false, "widget": "textfield", "title": "Retry Delay", "description": "Retry Delay(seconds)" },
    {"name": "max_retry_delay", "value":"", "required":false, "widget": "textfield", "title": "Max Retry Delay", "description": "Maximum delay interval between retries(seconds)" },
    {"name": "retry_exponential_backoff", "value":"", "required":false, "widget": "array", "optionsArray": ["True","False"], "title": "Retry Exponential Backoff", "description": "Allow progressive longer waits between retries by using exponential backoff algorithm on retry delay" },
    {"name": "aws_conn_id", "value":"", "required":false, "widget": "textfield", "title": "AWS Connection ID", "description": "AWS Connection ID" },
    {"name": "trigger_rule", "value":"all_success", "required":true, "widget": "array", "optionsArray": ["all_success","all_failed","all_done","all_skipped","one_failed","one_success","none_failed","none_failed_min_one_success","none_skipped","always"], "title": "Trigger Rule", "description": "Trigger Rule to be used" }

  ]
}
start-details:

h2:EMR Step Sensor operator

This node will periodically check if the last added step in EMR is completed or skipped or terminated.

end-details:

start-examples:

h2: EMR Step Sensor Operator Examples

h4: Example of Creating an EMR Step Sensor Operator Node

{
"Name": "MyStepSensor",
"ClusterId": "j-1234567890EXAMPLE",
"aws_conn_id": "my_aws_connection",
"trigger_rule": "all_success"
}

h4: Explanation
* This example demonstrates how to create an EMR Step Sensor Operator node that checks the status of the last step in the specified EMR cluster and triggers based on the defined rule.

h4: Usage
* Task ID: "my_emr_step_sensor_task"

end-examples: