{
  "id": "7",
  "name": "ExpectColumnValuesToBeInBetween",
  "description": "",
  "type": "transform",
  "engine": "pyspark",
  "nodeClass": "fire.nodes.ge.NodeExpectColumnValuesToBeInBetween",
  "fields" : [

    {"name": "cols", "value":"[]", "widget": "variables_list_select",
      "title": "Column Name", "description": "The column name."},

    {"name": "min", "value":"[]", "widget": "variables_list_textfield",
      "title": "Min", "description": "The minimum value for a column entry length."},

    {"name": "max", "value":"[]", "widget": "variables_list_textfield",
      "title": "Max", "description": "The maximum value for a column entry length."}

  ]
}

start-details:

h2:Expect Column Values To Between Details

Expect the column entries to be between a minimum value and a maximum value (inclusive).

h4:Keyword Args

Column Name: The column name
Min (comparable type or None): The minimum value for a column entry.
Max (comparable type or None): The maximum value for a column entry.

h4:Notes
`Min` and `Max` are both inclusive.
If `Min` is None, then `Max` is treated as an upper bound, and there is no minimum value checked.
If `Max` is None, then `Min` is treated as a lower bound, and there is no maximum value checked.

end-details:

start-examples:

h2:Example

h4:Incoming Dataframe

In this example we have considered a Incoming Dataframe with following rows:

EMP_CD    | Joining AGE   |    Joining Date     |
-------------------------------------------------
E01       |    42         | Jan 01 1979 12:00:01
E02       |    29         | Dec 31 1999 12:00:11
E03       |    35         | Jan 01 2000 12:03:01
E04       |    54         | Feb 01 2000 12:00:01	

h4:Configuration #1

Column Name | Min  | Max  |
--------------------------
Joining AGE | 25   | 60   |

The above setup would result in a status of `success: true` as the condition is satisfied.

h4:Configuration #2

Column Name  |          Min           |          Max           |
----------------------------------------------------------------
Joining Date | Jan 01 1990 12:00:00   | Jan 01 2001 12:00:00   |

The above setup would result in a status of `success: false` as the condition is satisfied.

end-examples:
