{
  "id": "5",
  "name": "XGBoost Classifier",
  "description": "",

  "input": "It takes in a DataFrame as input and performs XGBoost Classification",
  "output": "The XGBoost Model generated is passed along to the next nodes. The input DataFrame is also passed along to the next nodes",

  "type": "ml-estimator",
  "nodeClass": "fire.nodes.ml.NodeXGBoostClassifier",
  "fields" : [

    {"name": "featuresCol", "value":"", "widget": "variable", "title": "Features Column", "description": "Features column of type vectorUDT for model fitting", "datatypes":["vectorudt"]},

    {"name": "labelCol", "value":"", "widget": "variable", "title": "Label Column", "description": "The label column for model fitting", "datatypes":["double"]},

    {"name": "predictionCol", "value":"", "widget": "textfield", "title": "Prediction Column", "description": "The prediction column created during model scoring."},
    {"name": "splitRatio", "value":1.0, "widget": "textfield", "title": "Split Ratio", "description": "Split Ratio", "datatypes":["float"]},

    {"name": "numClass", "value":2, "widget": "textfield", "title": "Num Class", "description": ""},

    {"name": "maxDepth", "value":6, "widget": "textfield", "title": "Max Depth", "description": "The Maximum depth of a tree", "datatypes":["integer"]},

    {"name": "maxBins", "value":32, "widget": "textfield", "title": "Max Bins", "description": "The maximum number of bins used for discretizing continuous features.Must be >= 2 and >= number of categories in any categorical feature.", "datatypes":["integer"]},

    {"name": "maxLeaves", "value":32, "widget": "textfield", "title": "Max Leaves", "description": "", "datatypes":["integer"]},

    {"name": "numRound", "value":100, "widget": "textfield", "title": "Num Round", "description": "", "datatypes":["integer"]},

    {"name": "numWorkers", "value":1, "widget": "textfield", "title": "Num Workers", "description": "", "datatypes":["integer"]},

    {"name": "objective", "value":"multi:softprob", "widget": "array", "title": "Objective", "optionsArray": ["multi:softprob", "multi:softmax", "reg:logistic", "binary:logistic", "binary:hinge"], "description": ""},

    {"name": "eta", "value":0.3, "widget": "textfield", "title": "Eta", "description": "", "datatypes":["double"]},


    {"name": "regLambda", "value":1, "widget": "textfield", "title": "Reg Lambda", "description": "", "datatypes":["double"]},

    {"name": "regAlpha", "value":0, "widget": "textfield", "title": "Reg Alpha", "description": "", "datatypes":["double"]},

    {"name": "subsample", "value":1, "widget": "textfield", "title": "Sub Aample", "description": "", "datatypes":["double"]},

    {"name": "sampleType", "value":"uniform", "widget": "array", "title": "Sample Type", "optionsArray": ["uniform", "gradient_based"], "description": ""},

    {"name": "treeMethod", "value":"auto", "widget": "array", "title": "Tree Method", "optionsArray": ["auto", "exact", "approx", "hist", "gpu_hist"], "description": ""},

    {"name": "useExternalMemory", "value":"false", "widget": "array", "title": "Use External Memory", "optionsArray": ["false","true"], "description": "" ,"datatypes":["boolean"]},

    {"name": "seed", "value":0, "widget": "textfield", "title": "Seed", "description": "", "datatypes":["double"]},

    {"name": "baseScore", "value":0.5, "widget": "textfield", "title": "Base Score", "description": "", "datatypes":["double"]},

    {"name": "minChildWeight", "value":1, "widget": "textfield", "title": "Min Child Weight", "description": "", "datatypes":["double"]},

    {"name": "colsampleBylevel", "value":1, "widget": "textfield", "title": "Col Sample By Level", "description": "", "datatypes":["double"]},

    {"name": "colsampleBytree", "value":1, "widget": "textfield", "title": "Col Sample By Tree", "description": "", "datatypes":["double"]},

    {"name": "minSplitLoss", "value":0, "widget": "textfield", "title": "Min Split Loss", "description": "", "datatypes":["double"]},

    {"name": "maxDeltaStep", "value":0, "widget": "textfield", "title": "Max Delta Step", "description": "", "datatypes":["double"]},

    {"name": "sketchEps", "value":0.03, "widget": "textfield", "title": "Sketch Eps", "description": "", "datatypes":["double"]},

    {"name": "scalePosWeight", "value":0.3, "widget": "textfield", "title": "Scale Pos Weight", "description": "", "datatypes":["double"]},

    {"name": "growPlicy", "value":"depthwise", "widget": "array", "title": "Grow Policy", "optionsArray": ["depthwise", "lossguide"], "description": ""},

    {"name": "normalizeType", "value":"tree", "widget": "array", "title": "Normalize Type", "optionsArray": ["tree", "forest"], "description": ""},

    {"name": "skipDrop", "value":0.0, "widget": "textfield", "title": "Skip Drop", "description": "", "datatypes":["double"]},

    {"name": "rateDrop", "value":0.0, "widget": "textfield", "title": "Rate Drop", "description": "", "datatypes":["double"]}

  ]
}

start-details:

Deatils: https://xgboost.readthedocs.io/en/latest/jvm/xgboost4j_spark_tutorial.html#xgboost4j-spark-tutorial-version-0-9

h2: XGBoost Classifier Node Details

This node implements the XGBoost algorithm for classification tasks. It can be used for a variety of classification problems, including binary classification (e.g., spam detection) and multi-class classification (e.g., image recognition).

Key Parameters:

Features Column: The name of the column containing the features used for training.
Label Column: The name of the column containing the target variable to be predicted.
Prediction Column: The name of the column where the predicted class probabilities will be stored.
Num Class: The number of classes in the classification problem.
Max Depth: The maximum depth of each tree in the ensemble. Higher values can lead to overfitting.
Max Bins: The maximum number of bins to use for histogram-based approximations.
Max Leaves: The maximum number of leaves per tree.
Num Round: The number of boosting rounds (trees) to build.
Num Workers: The number of threads to use for parallel processing.
Objective: The objective function to optimize. 'multi:softprob' is used for multi-class classification.
Eta: The learning rate, which controls the step size at each boosting round.


end-details:


start-examples:

h2: XGBoost Classifier Node Example

Scenario:

Let's assume we have a dataset containing information about customers, including features like age, income, purchase history, etc., and the corresponding target variable being the customer's preferred product category.

Configuration:

1. Features Column: "customer_features"
2. Label Column: "product_category"
3. Prediction Column: "predicted_probabilities"
4. Num Class: 3 (assuming three product categories)
5. Max Depth: 6
6. Num Round: 100
7. Eta: 0.3
8. Objective: "multi:softprob"

Execution:

When this node is executed, the XGBoost algorithm will train a classification model using the specified parameters. The model will then be used to predict the probabilities of each product category for new customer data points. 

Output:

The predicted probabilities for each product category will be stored in the "predicted_probabilities" column of the output dataset. This column will likely be a list or array containing the probabilities for each class.

end-examples:
